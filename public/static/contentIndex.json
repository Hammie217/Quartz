{"Notes/Digital/AMQP":{"title":"AMQP","links":["Notes/Digital/RabbitMQ","Notes/Digital/PubSub"],"tags":[],"content":"Advanced Message Queuing Protocol is a protocol implemented primarily in RabbitMQ that supports both PubSub and client/server based communication."},"Notes/Digital/Application-Programming-Interface":{"title":"Application Programming Interface","links":[],"tags":[],"content":"An Application Programming Interface or API is an interface layer presented by a system to allow other systems to communicate easily.\nAn API allows systems to be integrated easily through a standard interface whilst allowing the API host to maintain ownership under the hood of how requests are processed.\nFor example, a historian may have a complex data storage and retrieval process to ensure compression/error detection/protection/load balancing etc that an interfacing system will not be expected to or trusted to manage through a direct connection, instead an API can be presented for consumers to use that has the protections required built in."},"Notes/Digital/CICD":{"title":"CICD","links":[],"tags":[],"content":"Continuous Integration and Continuous Deployment is the process of automating the compilation, testing and deployment of code into a production system."},"Notes/Digital/Containerisation/Autoscaling":{"title":"Autoscaling","links":["Notes/Digital/Containerisation/Kubernetes","Notes/Digital/Containerisation/Pods","Notes/Digital/Containerisation/Nodes","Notes/Digital/Containerisation/kube-controller-manager","Notes/Digital/Containerisation/Control-Plane","Notes/Digital/Containerisation/Horizontal-Pod-Autoscaling","Notes/Digital/Containerisation/Veritcal-Pod-Autoscaling","Notes/Digital/Application-Programming-Interface"],"tags":[],"content":"Autoscaling is a process in Kubernetes that allows Pods and Nodes to be automatically scaled to manage changing demand. Pods autoscaling is managed in the kube-controller-manager where resources are monitored on loop to detect if thresholds are met and need scaling.\nNodes Autoscaling is managed in another component called “Cluster Autoscaling”.\nAutoscaling is managed in the Control Plane\nThere are two different methods of Pods autoscaling:\n\nHorizontal Pod Autoscaling - Spin up and down pods on demand\nVeritcal Pod Autoscaling - Scale you pod resources based on demand\n\nAll autoscaling requests occur through the typical Kubernetes Control Plane Application Programming Interface."},"Notes/Digital/Containerisation/Container-Image":{"title":"Container Image","links":["Notes/Digital/Containerisation/Container","Notes/Digital/Containerisation/Image-Repository","Notes/Digital/Containerisation/Container-Runtime","Notes/Digital/Containerisation/Docker"],"tags":[],"content":"Container images are Container templates stored in an Image Repository that can be used to spin up Containers in a Container Runtime such as Docker."},"Notes/Digital/Containerisation/Container-Runtime":{"title":"Container Runtime","links":["Notes/Digital/Containerisation/Container","Notes/Digital/Containerisation/Container-Image"],"tags":[],"content":"A container runtime is a piece of software that allows for the creation and running of Container based on Container Image."},"Notes/Digital/Containerisation/Container":{"title":"Container","links":["Notes/Digital/Containerisation/Container-Image","Notes/Digital/Containerisation/Docker"],"tags":[],"content":"Containers are units of software that run to do a specific function, containers are based on Container Images that define what the container is comprised of.\nFor example a Container Image for InfluxDB is released and I can consume that image at my house as a container running on my home Docker host to instantly have a running InfluxDB."},"Notes/Digital/Containerisation/Control-Plane":{"title":"Control Plane","links":["Notes/Digital/Containerisation/Kubernetes","Notes/Digital/Containerisation/kube-apiserver","Notes/Digital/Containerisation/kube-controller-manager","Notes/Digital/Containerisation/kube-scheduler","Notes/Digital/Containerisation/etcd"],"tags":[],"content":"The control plane is the core component of Kubernetes that manages a cluster.\nBy default it is made up of:\n\nkube-apiserver\nkube-controller-manager\nkube-scheduler\netcd\n"},"Notes/Digital/Containerisation/Docker":{"title":"Docker","links":["Notes/Digital/Containerisation/Container-Runtime"],"tags":[],"content":"Docker is a very commonly used Container Runtime."},"Notes/Digital/Containerisation/Dockerfile":{"title":"Dockerfile","links":["Notes/Digital/Containerisation/Docker","Notes/Digital/Containerisation/Container-Image"],"tags":[],"content":"A dockerfile is a file that describes how to make a Docker Container Image."},"Notes/Digital/Containerisation/Ephemeral":{"title":"Ephemeral","links":["Notes/Digital/Containerisation/Kubernetes","Notes/Digital/Containerisation/Container","Notes/Digital/Containerisation/Persistent-Volume-Claim","Notes/Digital/Containerisation/Pods"],"tags":[],"content":"In Kubernetes the concept of an ephemeral Container is one that can run temporarily, aka it can spin up and spin down as required without needing any container specific memory.\nEphemeral containers can still use Persistent Volume Claim but shared across Pods rather than specific to the individual Pods.\nEphemeral containers are the opposite of stateful containers where history of the container is required for proper operation."},"Notes/Digital/Containerisation/Helm":{"title":"Helm","links":["Notes/Digital/Containerisation/Kubernetes","Notes/Digital/Containerisation/Helmcharts"],"tags":[],"content":"Helm is an an application that manages Kubernetes Helmcharts, Helm has an artifact hub to allow storage and sharing of Helmcharts. Helm also provides a CLI to load these charts into your Kubernetes cluster."},"Notes/Digital/Containerisation/Helmcharts":{"title":"Helmcharts","links":["Notes/Digital/Containerisation/Helm","Notes/Digital/Containerisation/Kubernetes"],"tags":[],"content":"Helmcharts are a collection of files used by Helm that define Kubernetes resources."},"Notes/Digital/Containerisation/High-Availability":{"title":"High Availability","links":[],"tags":[],"content":"High availability (HA) is simply the characteristic of keeping a system in an up state as much as possible, usually to some defined service level agreement such as 99.99% uptime (Less than 1 hour down a year).\nTo meet this HA requirement systems must:\n\nBe Fault tolerant - Capable of failing without loss of service\nHave Redundancy - Have hot swap at all times in event of failure\nLoad balance - Spread access loads out to prevent overuse of a single point\n"},"Notes/Digital/Containerisation/Horizontal-Pod-Autoscaling":{"title":"Horizontal Pod Autoscaling","links":["Notes/Digital/Containerisation/Pods","Notes/Digital/Containerisation/Kubernetes","Notes/Digital/Containerisation/Autoscaling"],"tags":[],"content":"HPA is the process of spinning up new Pods as required to meet demand in Kubernetes for Autoscaling."},"Notes/Digital/Containerisation/Image-Repository":{"title":"Image Repository","links":["Notes/Digital/Containerisation/Container","Notes/Digital/Containerisation/Container-Runtime","Notes/Digital/Containerisation/Docker","Notes/Digital/Open-Container-Initiative"],"tags":[],"content":"An image repository is used to store Container templates that can be spun up in a Container Runtime such as Docker.\nImage repositories are Container Runtime specific but many are adopting the Open Container Initiative format popularised by Docker to allow use on any platform."},"Notes/Digital/Containerisation/Kubernetes-services":{"title":"Kubernetes services","links":["Notes/Digital/Containerisation/Pods","Notes/Digital/Containerisation/Proxy"],"tags":[],"content":"Kubernetes services (or just called services in the kubernetes world) are an abstraction to allow exposing static endpoints for consumption whilst Pods in kubernetes are constantly changing.\nFor example a pod might be hosting a database at 1.2.3.4:1000 today and at 4.3.2.1:1000 tomorrow, services allow you to specify an endpoint myservice:80 that the kubernetes Proxy can then re-direct to the appropriate Pods."},"Notes/Digital/Containerisation/Kubernetes":{"title":"Kubernetes","links":["Notes/Digital/Containerisation/Container"],"tags":[],"content":"Kubernetes is a container orchestration platform for managing Containerised platforms."},"Notes/Digital/Containerisation/Manifest":{"title":"Manifest","links":["Notes/Digital/Containerisation/Kubernetes"],"tags":[],"content":"A Manifest file in Kubernetes is a descriptor file that defines the kubernetes objects to be created and how they should be managed by kubernetes."},"Notes/Digital/Containerisation/Microservices":{"title":"Microservices","links":[],"tags":[],"content":""},"Notes/Digital/Containerisation/Nodes":{"title":"Nodes","links":["Notes/Digital/Containerisation/Kubernetes","Notes/Digital/Containerisation/Pods","Posts/Kubernetes-Overview","Notes/Digital/Containerisation/High-Availability","Notes/Digital/Containerisation/Container-Runtime","Notes/Digital/Containerisation/Container","Notes/Digital/Containerisation/kubelet","Notes/Digital/Containerisation/Proxy","Notes/Digital/Containerisation/kube-proxy"],"tags":[],"content":"Nodes are a key concept of Kubernetes, these are your worker servers (more commonly VM’s such as EC2 instances) used in your cluster and as such spin up and down much less than Pods.\nIn one Kubernetes Overview cluster you should have multiple nodes to allow for High Availability. Larger nodes allow for less overheads and are more cost effective per compute used but more smaller nodes allow for more dynamic scalability to spin up and down as demand rises and falls.\nNodes (sometimes called Worker Nodes) are made of four main components :\n\nContainer Runtime\nContainers\nNode Agent (kubelet)\nProxy (Not always required) (kube-proxy)\n"},"Notes/Digital/Containerisation/Persistent-Volume-Claim":{"title":"Persistent Volume Claim","links":[],"tags":[],"content":""},"Notes/Digital/Containerisation/Pods":{"title":"Pods","links":["Notes/Digital/Containerisation/Kubernetes","Notes/Digital/Containerisation/Container","Notes/Digital/Containerisation/Autoscaling"],"tags":[],"content":"Nodes are a key concept of Kubernetes, these are a collection of Containers that form a functional block. Pods can be scaled up and down based on load using Autoscaling"},"Notes/Digital/Containerisation/Proxy":{"title":"Proxy","links":["Notes/Digital/Containerisation/Proxy","Notes/Digital/Containerisation/Kubernetes-services","Notes/Digital/Containerisation/Pods"],"tags":[],"content":"A Proxy is installed on nodes to allow Kubernetes services to be implemented. This allows for exposing network points to Pods that require it.\nIf this is not a requirement a proxy does not need to be installed.\nAs Pods are spun up and down as required with differing IP’s a proxy allows a specific Kubernetes services address to be used and the proxy can re-direct this traffic depending on what Pods are currently up.\nThe default kubernetes proxy is kube-proxy"},"Notes/Digital/Containerisation/Stateful-Set":{"title":"Stateful Set","links":["Notes/Digital/Containerisation/Kubernetes","Notes/Digital/Containerisation/Pods","Notes/Digital/Containerisation/Persistent-Volume-Claim"],"tags":[],"content":"A stateful set in Kubernetes ensures that when pods are spun up/down they are unique by applying an identifier to their names. Each time one of these Pods is created it links to its identifier and can be linked to a Persistent Volume Claim where its data resides whether the pod is running or not."},"Notes/Digital/Containerisation/Veritcal-Pod-Autoscaling":{"title":"Veritcal Pod Autoscaling","links":["Notes/Digital/Containerisation/Pods","Notes/Digital/Containerisation/Kubernetes","Notes/Digital/Containerisation/Autoscaling"],"tags":[],"content":"VPA is the process of updating resources aligned to Pods automatically based on load in Kubernetes for Autoscaling."},"Notes/Digital/Containerisation/etcd":{"title":"etcd","links":["Notes/Digital/Containerisation/High-Availability","Notes/Digital/Containerisation/Kubernetes"],"tags":[],"content":"etcd is a High Availability key-value store used by Kubernetes for storing information and configuration."},"Notes/Digital/Containerisation/kube-apiserver":{"title":"kube-apiserver","links":["Notes/Digital/Application-Programming-Interface","Notes/Digital/Containerisation/Kubernetes","Notes/Digital/Containerisation/Control-Plane"],"tags":[],"content":"Kube-apiserver is the default Application Programming Interface used in the Kubernetes Control Plane to manage all interactions."},"Notes/Digital/Containerisation/kube-controller-manager":{"title":"kube-controller-manager","links":["Notes/Digital/Containerisation/Kubernetes","Notes/Digital/Containerisation/Control-Plane","Notes/Digital/Containerisation/Nodes","Notes/Digital/Application-Programming-Interface"],"tags":[],"content":"Kube Controller Manager is the default controller management component of the Kubernetes Control Plane that monitors the status of Nodes through the Application Programming Interface, detecting node failures and spinning up new nodes as required."},"Notes/Digital/Containerisation/kube-proxy":{"title":"kube-proxy","links":["Notes/Digital/Containerisation/Kubernetes","Notes/Digital/Containerisation/Proxy"],"tags":[],"content":"kube-proxy is the default Kubernetes Proxy ."},"Notes/Digital/Containerisation/kube-scheduler":{"title":"kube-scheduler","links":["Notes/Digital/Containerisation/Kubernetes","Notes/Digital/Containerisation/Control-Plane","Notes/Digital/Containerisation/Pods"],"tags":[],"content":"Kube Scheduler is the default scheduler component of Kubernetes Control Plane that monitors load on the Pods and selects which node they should run on."},"Notes/Digital/Containerisation/kubeadm":{"title":"kubeadm","links":["Notes/Digital/Containerisation/Kubernetes"],"tags":[],"content":"kubeadm is Kubernetes tool for quickly setting up kubernetes clusters."},"Notes/Digital/Containerisation/kubelet":{"title":"kubelet","links":["Notes/Digital/Containerisation/Kubernetes","Notes/Digital/Containerisation/Nodes","Notes/Digital/Containerisation/Control-Plane"],"tags":[],"content":"Kubelet is the default Kubernetes Node agent that sits on all worker Nodes supervising all activity on the node and feeding status information back to the Control Plane."},"Notes/Digital/Debezium":{"title":"Debezium","links":["Notes/Digital/Kafka-Connect","Notes/Digital/Kafka"],"tags":[],"content":"Debezium is a Kafka Connect connector that uses database Change Data Capture (CDC) logs to detect changes to SQL tables in real time and stream changes up to a Kafka instance."},"Notes/Digital/FIFO":{"title":"FIFO","links":["Notes/Digital/Queue","Notes/Digital/LIFO","Notes/Digital/Stack"],"tags":[],"content":"First In First Out is a concept of Queues where the first datapoint in is always the first consumed.\nIt is the opposite of LIFO in Stacks"},"Notes/Digital/Idempotent":{"title":"Idempotent","links":["Notes/Digital/Containerisation/Container"],"tags":[],"content":"An Idempotent function is one that can handle being called multiple times when the output is only required once.\nFor example making a directory will return an error if that directory already exists. An idempotent version would either create the directory if not already created otherwise it will simply verify the existence of that directory.\nThis can be particularly important when multiple instances of the same code runs multiple times as is common in an a Container architecture"},"Notes/Digital/Kafka-Connect":{"title":"Kafka Connect","links":["Notes/Digital/Message-Broker","Notes/Digital/Debezium"],"tags":[],"content":"Kafka connect is a tool that allows deployment of connectors to interface different systems with a Kafka Message Broker.\nFor example Debezium could be used to replicate shop floor databases in real time into Kafka to be consumed."},"Notes/Digital/Kafka":{"title":"Kafka","links":["Notes/Digital/PubSub","Topic","Notes/Digital/Containerisation/Kubernetes","Notes/Digital/Kafka-Connect"],"tags":[],"content":"Kafka is a PubSub platform used to stream high volumes of data using Topics. Kafka is designed to be fault tolerant and scalable through the use of a platform like Kubernetes.\nKafka can handle very large quantities of real time data making it a great tool for transmitting data from the shop floor to higher level systems making use of Kafka Connect to interface with different systems."},"Notes/Digital/LIFO":{"title":"LIFO","links":["Notes/Digital/Stack"],"tags":[],"content":"Last In First Out is a concept of a Stack where the last datapoint inserted is the first to be consumed.\nConceptually this is similar to how you may stack boxes, the last box you have stacked is the first box to be picked up."},"Notes/Digital/MQTT":{"title":"MQTT","links":["Notes/Digital/PubSub","Notes/Digital/Message-Broker"],"tags":[],"content":"Message Queuing Telemetry Transport is a protocol implementation of PubSub with low overheads it is commonly implemented in IoT applications in conjunction with a Message Broker to distribute readings."},"Notes/Digital/Message-Broker":{"title":"Message Broker","links":["Notes/Digital/Queue","Notes/Digital/PubSub","Notes/Digital/RabbitMQ","Notes/Digital/Kafka","HiveMQ"],"tags":[],"content":"A message broker is an application that stores messages in some form of memory, typically a Queue, from data senders and allows reading of those messages from data readers.\nMessage Brokers commonly follow a PubSub architecture and depending on their requirements and some common examples are RabbitMQ, Kafka and HiveMQ."},"Notes/Digital/Open-Container-Initiative":{"title":"Open Container Initiative","links":["Notes/Digital/Containerisation/Container","Notes/Digital/Containerisation/Docker"],"tags":[],"content":"The Open Container Initiative (OCI), is a project dedicated to standardisation of Container formats, the current OCI standards are very heavily based on Docker formats."},"Notes/Digital/PubSub":{"title":"PubSub","links":["Notes/Digital/Message-Broker"],"tags":[],"content":"Publish Subscribe is a common architecture for a Message Broker that decouples dataflow allowing a data server to publish data to the queue at any rate it likes and a data consumer to subscribe and read that data whenever it likes."},"Notes/Digital/Queue":{"title":"Queue","links":[],"tags":[],"content":"A queue is a programming structure that reserves a section of memory allowing data to be processed in order of creation.\nThis is similar to a physical queue where the first person is processed whilst others wait in line progressing closer to the front.\nIn the hardware world Queues are almost always implemented using shift registers."},"Notes/Digital/RabbitMQ":{"title":"RabbitMQ","links":["Notes/Digital/Message-Broker","Notes/Digital/Queue","Notes/Digital/FIFO","Notes/Digital/AMQP","Notes/Digital/PubSub","Notes/Digital/MQTT"],"tags":[],"content":"Rabbit MQ is a Message Broker based around a Queue architecture. Unlike other brokers RabbitMQ ensures FIFO which can be especially critical for background service management unless Sharding is implemented.\nRabbitMQ uses AMQP which allows for both PubSub and server client architectures compared to MQTT based brokers.\nRabbitMQ does however have non-negligible overheads meaning it is less used in low latency and high frequency applications."},"Notes/Digital/Stack":{"title":"Stack","links":["Notes/Digital/LIFO"],"tags":[],"content":"A stack is a dedicated section of LIFO memory. Stacks are very common in programming as a method used to implement things like Undo functionality (remember order of actions and undo latest first) or recursive functions where each function must remember where it must return to."},"Notes/Notes":{"title":"Notes","links":["Notes/Pharma/","Notes/Digital/Containerisation/Kubernetes","Notes/Pharma/Secondary-Manufacturing"],"tags":[],"content":"Hello everyone, this section of my website is dedicated to my “Second Brain” style website that can hopefully be used as a lookup for all to use and learn as much as you like about any topics I know about.\nAt the moment I’m focusing on my experience in Digitalisation and the Pharmaceutical Industry. If you’d like to start reading, try using the search bar or graph view to find a topic you’re interested in for example you can start at Kubernetes or Secondary Manufacturing  but the benefit of this approach is you can start or end anywhere."},"Notes/Pharma/Active-Pharmaceutical-Ingredient":{"title":"Active Pharmaceutical Ingredient","links":["Notes/Pharma/Primary-Manufacturing","Notes/Pharma/Secondary-Manufacturing"],"tags":[],"content":"Active Pharmaceutical Ingredient, commonly known as API is the key part of a drug, this is made during the Primary Manufacturing process and used as part of the Secondary Manufacturing process."},"Notes/Pharma/Aseptic":{"title":"Aseptic","links":["Notes/Pharma/Sterilisation","Notes/Pharma/Terminal-Sterilisation"],"tags":[],"content":"Aseptic is the property of a substance, system or process being free of microorganism contamination.\nThe distinction between Aseptic and Sterilisation is Sterilisation removes all microorganisms whereas Aseptic processing prevents the introduction of contamination.\nAseptic processing is a key part of manufacturing biological drugs where Terminal Sterilisation is not possible."},"Notes/Pharma/Assembly":{"title":"Assembly","links":["Notes/Pharma/Autoinjectors","Force-Distance"],"tags":[],"content":"Assembly is the process of assembling a device, for injectable devices this this is commonly Autoinjectors. Assembly can be a very complex process due to many complex parts that can have no visual indication of correct installation.\nFor example for many devices require monitoring of Force-Distance to check correct assembly which can be vary depending on the device tolerances."},"Notes/Pharma/Autoinjectors":{"title":"Autoinjectors","links":["Notes/Pharma/Vials","Notes/Pharma/Secondary-Manufacturing","Notes/Pharma/Assembly","Notes/Pharma/Syringes","Housing","Notes/Pharma/Power-Pack"],"tags":[],"content":"An autoinjector is a type of single use device used to deliver drugs to a patient. These devices are designed to be simple so that complex medicines that previously would require a healthcare professional to administer, such as Vials products, can be self administered saving time of both the healthcare team and patient.\nAutoinjectors however require the added Secondary Manufacturing complexities of Assembly.\nAutoinjectors are made up of:\n\nSyringes\nHousing\nPower Pack\n"},"Notes/Pharma/Bander":{"title":"Bander","links":["Notes/Pharma/Secondary-Manufacturing","Notes/Pharma/Packing","Notes/Pharma/Carton","Notes/Pharma/Case"],"tags":[],"content":"A bander is a piece of equipment sometimes used in the Secondary Manufacturing Packing process to band multiple Cartons together before being packed into a Case.\nA bander most commonly applies a plastic film around cartons to band them together."},"Notes/Pharma/Beads":{"title":"Beads","links":["Notes/Pharma/Wet-Bead-Mill","Notes/Pharma/Milling"],"tags":[],"content":"Beads are small balls used in Wet Bead Mill to erode the product. These are commonly made using ceramic material due to their hardness.\nBead sizing determines the effective Milling particulate size."},"Notes/Pharma/Blending":{"title":"Blending","links":["Notes/Pharma/Oral-Solid-Dose","Notes/Pharma/Manufacturing"],"tags":[],"content":"Blending (or Mixing) is a process in Oral Solid Dose Manufacturing to mix multiple ingredients into one homogeneous substance."},"Notes/Pharma/Blowdown":{"title":"Blowdown","links":["Notes/Pharma/Clean-In-Place","Notes/Pharma/Sterilisation-In-Place"],"tags":[],"content":"Blowdown refers to the process of using a compressed gas to push liquid out of a system, this is commonly done after Clean In Place and Sterilisation In Place processes to remove moisture."},"Notes/Pharma/Body":{"title":"Body","links":["Notes/Pharma/Syringes","Notes/Pharma/Bulk-Drug-Product","Stopper","Notes/Pharma/Needle"],"tags":[],"content":"The body of Syringes, commonly know as the Barrel, is the glass section of a syringe that contains the liquid Bulk Drug Product and Stopper and also mounts into the Needle directly."},"Notes/Pharma/Buffer":{"title":"Buffer","links":["Notes/Pharma/Active-Pharmaceutical-Ingredient","Notes/Pharma/Bulk-Drug-Product"],"tags":[],"content":"Buffer is typically the non Active Pharmaceutical Ingredient components of Bulk Drug Product, these ingredients don’t have a biological impact but are instead used to support the API such as for Stability, Solubility and Efficacy."},"Notes/Pharma/Bulk-Drug-Product":{"title":"Bulk Drug Product","links":["Filling","Notes/Pharma/Active-Pharmaceutical-Ingredient","Notes/Pharma/Buffer","Notes/Pharma/Bulk-Drug-Substance"],"tags":[],"content":"Bulk Drug Product or commonly BDS is the name for product that is fully made ready for Filling. This is made up of the Active Pharmaceutical Ingredient and any Buffer required for the product. This name is typically used in conjunction with Bulk Drug Substance to define the product before and after manufacturing."},"Notes/Pharma/Bulk-Drug-Substance":{"title":"Bulk Drug Substance","links":["Notes/Pharma/Active-Pharmaceutical-Ingredient","Notes/Pharma/Bulk-Drug-Substance"],"tags":[],"content":"BDS or Bulk Drug Substance is typically another name for Active Pharmaceutical Ingredient, it is the drug product before it has been made up into Bulk Drug Substance."},"Notes/Pharma/Carton":{"title":"Carton","links":["Notes/Pharma/Cartonner"],"tags":[],"content":"A Carton is simply a container for sale of a product on the market, carton artwork is strictly regulated to ensure information is present and clear to prevent consumer confusion.\nIn an automated process Cartons are formed and packed using a Cartonner."},"Notes/Pharma/Cartonner":{"title":"Cartonner","links":["Notes/Pharma/Carton","Notes/Pharma/Leaflet"],"tags":[],"content":"A cartonner is a piece of equipment designed to put a product into a Carton as you would purchase off the shelf at a pharmacy.\nCartonners most commonly pack products into a Carton with a Leaflet.\nAs packaging processes are moving into the digital world a QR code on the carton with the same information is becoming more accepted, this allows manufacturers to reduce waste, reduce processing cost and allow patients access to a dynamic product information system."},"Notes/Pharma/Case":{"title":"Case","links":["Notes/Pharma/Carton","Notes/Pharma/Casepacker","Notes/Pharma/Pallet","Notes/Pharma/Palletiser"],"tags":[],"content":"A Case is a large box typically used for volume transport of Cartons. Cases can hold anywhere in the region of 10-100 cartons depending on size of carton and case. Cartons are packed into Cases in a Casepacker.\nFor batches that are not minute, cases are packed onto Pallets for easy mass transport using a Palletiser."},"Notes/Pharma/Casepacker":{"title":"Casepacker","links":["Notes/Pharma/Packing","Notes/Pharma/Carton","Notes/Pharma/Case","Notes/Pharma/Palletiser"],"tags":[],"content":"A casepacker is a piece of equipment commonly part of a Packing process that takes completed and checked Cartons ready for shipping and packs them into Cases.\nCasepackers are commonly merged with a Palletiser to form a single equipment unit."},"Notes/Pharma/Checkweigher":{"title":"Checkweigher","links":["Notes/Pharma/Packing","Notes/Pharma/Cartonner","Notes/Pharma/Casepacker"],"tags":[],"content":"A checkweigher is a piece of equipment commonly used in Packing after a Cartonner and sometimes after a Casepacker to ensure cartons are within a specified weight limit to detect missing or extra parts (Missing leaflet/Missing Product/Double leaflet etc…)"},"Notes/Pharma/Clean-In-Place":{"title":"Clean In Place","links":["Notes/Pharma/Water-For-Injection","Notes/Pharma/Purified-Water","Notes/Pharma/drainable","Notes/Pharma/Sterilisation-In-Place"],"tags":[],"content":"Clean in place(More commonly CIP) is the process of cleaning a system whilst it is in place (aka not disassembled).\nCIP is usually achieved through circulation/draining of hot (~80C) water (Water For Injection/Purified Water depending on requirements) for a certain time.\nCIP requires all pipework to be drainable and for all surfaces to be cleaned.\nCIP is commonly followed by Sterilisation In Place."},"Notes/Pharma/Coater":{"title":"Coater","links":["Notes/Pharma/Friability"],"tags":[],"content":"A coater typically works like a washing machine where tablets are circulated around in a drum whilst sprayed with a coating liquid and warm air to dry the coating on.\nCoaters need to balance spinning slow enough to avoid tablets chipping due to their Friability and spinning fast enough to prevent tablets sticking together.\n"},"Notes/Pharma/Coating":{"title":"Coating","links":["Notes/Pharma/Oral-Solid-Dose","Notes/Pharma/Unit","Notes/Pharma/Coater"],"tags":[],"content":"Coating is a process in Oral Solid Dose manufacturing that adds a layer to the outside of a drug.\nCoating is completed using a Unit called a Coater"},"Notes/Pharma/Cold-chain":{"title":"Cold chain","links":["Notes/Pharma/Critical-Process-Parameter","Notes/Pharma/RFID","Notes/Pharma/RTLS"],"tags":[],"content":"Cold chain products are products where temperature plays a role in the stability of the product. As such the duration the products are out of a cold storage must be tracked as a Critical Process Parameter. This is commonly implemented as a manual check but in more digital factories entry and exit events are tracked through RFID or RTLS systems."},"Notes/Pharma/Continuous-Process-Verification":{"title":"Continuous Process Verification","links":["Notes/Pharma/Critical-Quality-Attribute","Notes/Pharma/Critical-Process-Parameter","Notes/Pharma/Critical-Material-Attribute"],"tags":[],"content":"Continuous Process Verification (CPV), is a process required in pharmaceutical manufacturing to monitor all Critical Quality Attributes, Critical Process Parameters and Critical Material Attributes.\nCPV requires these datapoints must be collected, stored and monitored throughout manufactured batches including statistical analysis on this data.\nCPV helps to detect individual out of specification batches, step changes in output (pointing to possible manufacturing changes or supplied material changes), gradual changes (pointing to degradation of process)."},"Notes/Pharma/Control-Module":{"title":"Control Module","links":["Notes/Pharma/ISA88","Notes/Pharma/Equipment-Module"],"tags":[],"content":"A Process cell is an ISA88 defined structure that belongs to a Equipment Module and is the lowest level defined in the physical hierarchy.\nControl Modules are typically instruments such as valves or pressure sensors."},"Notes/Pharma/Critical-Material-Attribute":{"title":"Critical Material Attribute","links":["Notes/Pharma/Manufacturing","Notes/Pharma/Active-Pharmaceutical-Ingredient","Notes/Pharma/Continuous-Process-Verification"],"tags":[],"content":"A Critical Material Attribute (CMA), is an attribute of raw material supplied to a pharmaceutical Manufacturing process that effects the quality of product produced, for example pH of supplied Active Pharmaceutical Ingredient.\nCMA’s must be monitored through Continuous Process Verification to detect anomalies/trends."},"Notes/Pharma/Critical-Process-Parameter":{"title":"Critical Process Parameter","links":["Notes/Pharma/Critical-Quality-Attribute","Notes/Pharma/Continuous-Process-Verification"],"tags":[],"content":"A Critical Process Parameter (or CPP) is a parameter of a manufacturing process that has a direct impact on a Critical Quality Attribute of a product such as pressure over a filter, temperature of product etc..\nCPPs are highly important data in pharmaceutical manufacture and plays a key role in Continuous Process Verification."},"Notes/Pharma/Critical-Quality-Attribute":{"title":"Critical Quality Attribute","links":["Notes/Pharma/Continuous-Process-Verification","Notes/Pharma/Critical-Process-Parameter"],"tags":[],"content":"A Critical Quality Attribute (or CQA) is an attribute chosen for a product that ensures that it is of the desired quality.\nFor example a product could have a CQA for the pH, Particle size, endotoxin content, sterility etc..\nCQAs must be rigorously defined and then monitored as part of Continuous Process Verification as per FDA/other governing body requirements.\nManufacture parameters that directly impact CQAs are Critical Process Parameter."},"Notes/Pharma/Depyrogenation-Oven":{"title":"Depyrogenation Oven","links":["Notes/Pharma/Sterilisation","Notes/Pharma/Dry-Heat","Notes/Pharma/pyrogens"],"tags":[],"content":"A depyrogenation oven is a piece of equipment used for Sterilisation which uses Dry Heat. A depyrogenation oven not only kills bacteria but also destroys pyrogens. A depyrogenation oven typically has a few operations:\n\n?Venting? - Start heating with vents open to remove moisture\nHeating - Continue heating with vents closed to reach depyrogenation temperature\nDelay - Hold chamber at depyrogenation temperature until whole load is at depyrogenation temperature\nDepyrogenation - Hold depyrogenation temperature until whole load has experienced depyrogenation duration\nCooling - Cool load down to prevent injury once the door is opened\n"},"Notes/Pharma/Depyrogenation":{"title":"Depyrogenation","links":["Notes/Pharma/pyrogens","Notes/Pharma/parental","Notes/Pharma/Dry-Heat","Notes/Pharma/Sterilisation","Notes/Pharma/Depyrogenation-Oven","Notes/Pharma/pyrogen-free","Notes/Pharma/intrathecal"],"tags":[],"content":"Depyrogenation is the process of removing or destroying pyrogens, typically required for parental dose forms.\nDepyrogenation is commonly completed through Dry Heat Sterilisation such as a Depyrogenation Oven.\nThe FDA has defined limits for pyrogen free product (currently 5EU/Kg for non-intrathecal parental drugs)."},"Notes/Pharma/Dispensing":{"title":"Dispensing","links":["Notes/Pharma/Active-Pharmaceutical-Ingredient","Notes/Pharma/Buffer","Notes/Pharma/Beads"],"tags":[],"content":"Dispensing is the process of measuring key quantities of materials for production of the product, commonly Active Pharmaceutical Ingredient, Buffer, Beads etc…"},"Notes/Pharma/Dry-Granulation":{"title":"Dry Granulation","links":["Notes/Pharma/Granulation"],"tags":[],"content":"Dry granulation is a Granulation process where powder is kept dry during its granulation, this is usually completed using a roller compactor to squeeze the powder together followed by a simple mill and sieve to ensure particulate sizing."},"Notes/Pharma/Dry-Heat":{"title":"Dry Heat","links":["Notes/Pharma/Sterilisation","Notes/Pharma/Depyrogenation"],"tags":[],"content":"Dry heat Sterilisation is the process of heating a system without the use of water like a typical home oven, this is commonly used for both Sterilisation and Depyrogenation in one."},"Notes/Pharma/Endotoxins":{"title":"Endotoxins","links":["Gram-Negative-Bacteria","Notes/Pharma/pyrogens","Notes/Pharma/Sterilisation"],"tags":[],"content":"Endotoxins are sections of outer wall of Gram-Negative Bacteria which are pyrogens. Endotoxins are typically generated as part of Sterilisation where bacteria is broken down leaving the cell wall endotoxins behind."},"Notes/Pharma/Equipment-Module":{"title":"Equipment Module","links":["Notes/Pharma/ISA88","Notes/Pharma/Unit","Notes/Pharma/Control-Module"],"tags":[],"content":"A Process cell is an ISA88 defined structure that belongs to a Unit and may contain Control Module.\nAn equipment module is typically a module of a line or a skid of equipment note for some equipment that could be a single module."},"Notes/Pharma/F0-Value":{"title":"F0 Value","links":["Notes/Pharma/lethality"],"tags":[],"content":"F0 Value is a calculation of the lethality a system has been subjected to.\nF0 takes into account temperature and time of exposure."},"Notes/Pharma/Fluidised-Bed":{"title":"Fluidised Bed","links":["Notes/Pharma/Oral-Solid-Dose","Notes/Pharma/Manufacturing","Notes/Pharma/Pharmaceutical-Manufacture","Notes/Pharma/Water-For-Injection","Notes/Pharma/Clean-In-Place","Notes/Pharma/Beads","Notes/Pharma/Sterilisation"],"tags":[],"content":"A Fluidised bed is a piece of equipment that makes use of fluidisation to perform some process on particulates. Most commonly a fluid bed dryer which is used in Oral Solid Dose Manufacturing to dry wet granules.\nFluidised bed technology can also be used in Pharmaceutical Manufacture using Water For Injection as a fluidisation medium to act as a Clean In Place process for Beads, the same fluidisation process can be used with dry heat to dry the medium before Sterilisation.\n"},"Notes/Pharma/Forced-Thaw":{"title":"Forced Thaw","links":["Notes/Pharma/Thawing","Notes/Pharma/Active-Pharmaceutical-Ingredient"],"tags":[],"content":"Forced thawing is a controlled process for melting/Thawing Active Pharmaceutical Ingredient, typically a bag of product is lightly clamped between two metal plates, these metal plates are lightly heated usually through a liquid acting as a heat exchanger for the product. This allows more control and reproducibility over the thawing of a product."},"Notes/Pharma/Formulation":{"title":"Formulation","links":["Notes/Pharma/Buffer","Notes/Pharma/Manufacturing"],"tags":[],"content":"Formulation is the process in which Buffer is added during Manufacturing, this is usually done to ensure the product meets its requirements such as pH for stability."},"Notes/Pharma/Friability":{"title":"Friability","links":["Notes/Pharma/Oral-Solid-Dose","Notes/Pharma/Coating"],"tags":[],"content":"Friability is the tedancy of a substance to break into smaller pieces. Friability is a key property of Oral Solid Dose drugs especially when going through a Coating process to prevent formed drugs breaking off pieces (typically small chips)"},"Notes/Pharma/Frozen-chicken":{"title":"Frozen chicken","links":["Notes/Pharma/Thawing","Notes/Pharma/Passive-Thaw","Notes/Pharma/Forced-Thaw"],"tags":[],"content":"To describe Thawing I commonly explain this like how someone may thaw a piece of chicken for dinner. If you have enough time you could leave the chicken out on a counter, this is like Passive Thaw otherwise if you were in a pinch and needed it soon you may choose to put it in a bath of warm water or on a metal plate to dissipate the heat quicker, this is similar to Forced Thaw."},"Notes/Pharma/Granulation":{"title":"Granulation","links":["Notes/Pharma/Wet-Granulation","Notes/Pharma/Dry-Granulation","Notes/Pharma/Tablet-Pressing","Notes/Pharma/Blending","Notes/Pharma/Fluidised-Bed"],"tags":[],"content":"Granulation is the process of transforming a powder into small granules (larger particulate size). This can be completed using a small amount of liquid called Wet Granulation or through compression called Dry Granulation or sometimes not completed and the powder be directly taken to Tablet Pressing.\nGranulation is usually preceded by Blending\nWet Granulation is usually followed by a Fluidised Bed drying process before Blending\nDry Granulation is usually followed directly by Blending"},"Notes/Pharma/Heat-Sealer":{"title":"Heat Sealer","links":["Notes/Pharma/Autoinjectors","Notes/Pharma/Cartonner"],"tags":[],"content":"A heat sealer is a piece of equipment that uses heat to seal a package closed.\nFor example Autoinjectors can be placed inside a plastic tray and sealed shut with a layer of thin plastic ready to be packed by a Cartonner."},"Notes/Pharma/ISA88":{"title":"ISA88","links":["Notes/Pharma/Process-Cell","Notes/Pharma/Unit","Notes/Pharma/Equipment-Module","Notes/Pharma/Control-Module","Notes/Pharma/Procedure","Notes/Pharma/Unit-Procedure","Notes/Pharma/Operation","Notes/Pharma/Phase"],"tags":[],"content":"ISA88 is a standard for batch control and standardises many terms and structures. ISA88 was released in 1995 and is in widespread use throughout industry as the batch control standard.\nISA88 defines both a Physical Model and a Procedural Model.\nThe physical model defines a Process Cell must contain Units, may contain Equipment Modules, may contain Control Module.\nThis physical model means one structure can cover anything from a simple standalone pH meter as a Unit, or a multi building reactor.\nThe Procedural Model (Software/process model) defines a Procedure containing Unit Procedures, containing Operations, containing Phases.\nISA88 also defines key recipe terminology and structure."},"Notes/Pharma/Labeller":{"title":"Labeller","links":["Notes/Pharma/Vials","Notes/Pharma/Syringes","Notes/Pharma/Autoinjectors","Notes/Pharma/Carton","Notes/Pharma/Tamper-Evident-Label","Notes/Pharma/Serialisation"],"tags":[],"content":"A  labeller is a piece of equipment used to apply a label to something.\nThere are many subtypes of labellers that all do the same task they just operate in different ways:\n\nVial Labeller - Apply a label to a Vials\nSyringe Labeller - Apply a label to Syringes\nDevice Labeller - Apply a label to Autoinjectors\nCarton Labeller - Apply a label to a Carton\nTamper Evident Labeller - Apply a Tamper Evident Label to a Carton\n\nSerialisation is a key requirement for pharmaceutical products that must be applied at labelling.\nExpiration date and/or lot or batch numbers are also required to be labelled on the product."},"Notes/Pharma/Leaflet":{"title":"Leaflet","links":["Notes/Pharma/Carton"],"tags":[],"content":"A Leaflet is typically a piece of paper supplied as part of a product in the Carton containing product information and is a requirement of any drugs supplied.\nThere is an ongoing movement, in its early phases, to move away from leaflet supply where possible and replace with a digital information system through a consumer scannable QR code."},"Notes/Pharma/Manufacturing":{"title":"Manufacturing","links":["Notes/Pharma/Active-Pharmaceutical-Ingredient","Notes/Pharma/Unit-Procedure","Notes/Pharma/Dispensing","Notes/Pharma/Thawing","Notes/Pharma/Pooling","Notes/Pharma/Blending","Notes/Pharma/Formulation","Notes/Pharma/Milling","Notes/Pharma/Granulation","Micronising","Notes/Pharma/Fluidised-Bed"],"tags":[],"content":"Manufacturing pharmaceutical products can change massively depending on the material properties of the Active Pharmaceutical Ingredient, some common manufacturing processes/Unit Procedures include:\n\nDispensing\nThawing\nPooling\nBlending\nFormulation\nMilling\nGranulation\nMicronising\nFluidised Bed Drying\n"},"Notes/Pharma/Milling":{"title":"Milling","links":["Notes/Pharma/Wet-Bead-Mill"],"tags":[],"content":"Milling is a process for reducing the particle size of products, milling can either be wet or dry. For wet milling the most common method is Wet Bead Milling.\n?Dry milling?"},"Notes/Pharma/Moist-heat-sterilisation":{"title":"Moist heat sterilisation","links":["Dry-steam","Notes/Pharma/Sterilisation","Steam-Traps","Notes/Pharma/Depyrogenation"],"tags":[],"content":"Moist heat sterilisation (Or steam sterilisation), is the process of using Dry steam in Sterilisation.\nThe condensation of steam into water releases a large amount of energy at the contact point (usually walls of a pipe) causing Sterilisation . This water vapour then acts as a barrier to further condensation on the system surfaces, as such Steam Traps are used to drain water but leave steam in the system.\nAlthough moist heat sterilisation does help with Depyrogenation, due to the presence of moisture it does not excel and is not commonly classed as a Depyrogenation process."},"Notes/Pharma/Monograph":{"title":"Monograph","links":["Notes/Pharma/Water-For-Injection","Notes/Pharma/Purified-Water"],"tags":[],"content":"A monograph in a pharmaceutical setting is a document that set the requirements/expectations for certain key components such as Water For Injection and Purified Water.\nMonographs ensure everyone is speaking the same language and there is no ambiguity around suitability as long as monograph requirements are met."},"Notes/Pharma/Needle":{"title":"Needle","links":["Notes/Pharma/Syringes","Notes/Pharma/Body","Needle-Shield"],"tags":[],"content":"The needle of Syringes, is a hollow metal tube connected to the Body that is used to inject into the body. Before use a needle will have some level of Needle Shield to protect the needle from both sterility issues and physical damage."},"Notes/Pharma/Operation":{"title":"Operation","links":["Notes/Pharma/ISA88","Notes/Pharma/Phase","Notes/Pharma/Unit-Procedure"],"tags":[],"content":"A Unit Procedure is an ISA88 defined structure and may contain Phases. An Operation defines a set of steps required to run as part of a Unit Procedure."},"Notes/Pharma/Optical-Character-Verification":{"title":"Optical Character Verification","links":["Notes/Pharma/Serialisation"],"tags":[],"content":"Optical Character Verification is a process where printed text and codes are read by a vision system and compared to what is expected.\nOCV is most commonly implemented as part of Serialisation.\nOCV is distinctly different from OCR for Example; if a label stated 006 instead of 008 this would be rejected despite being legiable as it states the wrong code."},"Notes/Pharma/Oral-Solid-Dose":{"title":"Oral Solid Dose","links":["Notes/Pharma/Granulation","Notes/Pharma/Fluidised-Bed","Notes/Pharma/Blending","Compression","Notes/Pharma/Coating","Blister-Packing"],"tags":[],"content":"Oral Solid Dose is the process of creating tablets. OSD is created using either a wet or dry process that follow a fairly similar process, typically  Granulation, Fluidised Bed drying(If wet), Blending, Compression, Coating,Blister Packing"},"Notes/Pharma/Packing":{"title":"Packing","links":["Notes/Pharma/Carton","Notes/Pharma/Leaflet","Notes/Pharma/Case","Notes/Pharma/Pallet","Notes/Pharma/Tray-Unloader","Notes/Pharma/Puck-Loader","Notes/Pharma/Labeller","Notes/Pharma/Puck-Unloader","Notes/Pharma/Heat-Sealer","Notes/Pharma/Cartonner","Notes/Pharma/Checkweigher","Notes/Pharma/Bander","Notes/Pharma/Casepacker","Notes/Pharma/Palletiser"],"tags":[],"content":"Packing is the process of taking a finished product and packing it into the format required for shipping to a customer/distributor.\nPacking usually takes individual products and packs them into a Carton with a Leaflet inside and then into Case and onto a Pallet ready for shipping.\nIn almost all situations Packaging does not need to be completed in a classified area unless there are product/process specific requirements.\nCommon pieces of equipment in the pharmaceutical world are:\nTray Unloader/Puck Loader\nLabeller\nPuck Unloader\nHeat Sealer\nCartonner\nCheckweigher\nBander\nCasepacker/Palletiser"},"Notes/Pharma/Pallet-Stacker":{"title":"Pallet Stacker","links":["Notes/Pharma/Pallet"],"tags":[],"content":"A Pallet stacker is a piece of equipment designed to stack Pallets, pallet stackers are either mobile manual devices where operators manually adjust heights to stack pallets or static automatic systems where pallets can be dropped off and automatically stacked."},"Notes/Pharma/Pallet-Transfer":{"title":"Pallet Transfer","links":["Notes/Pharma/Pallet"],"tags":[],"content":"A Pallet Transfer machine (or Pallet Changer) is a piece of equipment that takes the load from one Pallet onto another.\nThese are commonly use to transfer from internal, site owned, pallets to cheaper wooden or plastic pallets for distribution.\nPallet Transfer systems commonly work through a “side pusher” format where a wall will push contents held on one pallet onto another."},"Notes/Pharma/Pallet-Wrapper":{"title":"Pallet Wrapper","links":["Notes/Pharma/Pallet"],"tags":[],"content":"A pallet wrapper is a piece of equipment designed to wrap a loaded Pallet.\nPallet wrapping ensures loads stacked on pallets are held together in once piece as well as weakly fixing the load to the pallet."},"Notes/Pharma/Pallet":{"title":"Pallet","links":["Notes/Pharma/Case","Notes/Pharma/Palletiser","Notes/Pharma/Pallet-Transfer","Notes/Pharma/Pallet-Stacker","Notes/Pharma/Pallet-Wrapper"],"tags":[],"content":"A pallet is a standardised format of holding good for transport. Pallets are most commonly wood but in clean manufacturing areas where contamination is a risk, metal or plastic is commonly used.\nPallets are commonly loaded with Cases filled with product using a Palletiser ready for distribution.\nMany standard pieces of equipment exist that function around the use of pallets:\n\nPalletiser\nPallet Transfer\nPallet Stacker\nPallet Wrapper\n"},"Notes/Pharma/Palletiser":{"title":"Palletiser","links":["Notes/Pharma/Packing","Notes/Pharma/Casepacker","Notes/Pharma/Case","Notes/Pharma/Pallet"],"tags":[],"content":"A Palletiser is a piece of equipment commonly used in Packing lines and commonly paired with a Casepacker to stack filled Cases onto Pallets."},"Notes/Pharma/Passive-Thaw":{"title":"Passive Thaw","links":["Notes/Pharma/Active-Pharmaceutical-Ingredient"],"tags":[],"content":"Passive thawing is the process of leaving Active Pharmaceutical Ingredient in an ambient area to let it slowly thaw, as this is’t forced or controlled outside of the ambient areas controls this can take a good amount of time depending on the thermal mass and surface area, it also leads to variance in terms of time to thaw so checks have to be in place to ensure product is appropriately thawed."},"Notes/Pharma/Pharmaceutical-Manufacture":{"title":"Pharmaceutical Manufacture","links":["Notes/Pharma/Primary-Manufacturing","Notes/Pharma/Secondary-Manufacturing"],"tags":[],"content":"Pharma manufacturing chain is usually split into to distinct sections. Primary Manufacturing and Secondary Manufacturing."},"Notes/Pharma/Phase":{"title":"Phase","links":["Notes/Pharma/ISA88","Notes/Pharma/Operation"],"tags":[],"content":"A Phase is an ISA88 defined structure and is the lowest level in the Procedural Model. A Phase defines a set of steps required to run as part of an Operation."},"Notes/Pharma/Pooling":{"title":"Pooling","links":["Notes/Pharma/Active-Pharmaceutical-Ingredient","Notes/Pharma/Bulk-Drug-Product"],"tags":[],"content":"Pooling is the process of mixing multiple batches/bags of Active Pharmaceutical Ingredient together to create one batch of Bulk Drug Product"},"Notes/Pharma/Power-Pack":{"title":"Power Pack","links":["Notes/Pharma/Autoinjectors"],"tags":[],"content":"A power pack is a term used to describe the force acting part of Autoinjectors these powerpacks are the active part that allows the medicine to be delieved, as such the reliability of these devices must be high and ensure the drug is delivered in the right way."},"Notes/Pharma/Primary-Manufacturing":{"title":"Primary Manufacturing","links":["Notes/Pharma/Active-Pharmaceutical-Ingredient","Notes/Pharma/Secondary-Manufacturing"],"tags":[],"content":"Primary manufacturing in the pharma industry is the process of making the Active Pharmaceutical Ingredient, this API is then supplied to the Secondary Manufacturing process for finishing.\nNeed to talk here about primary processes"},"Notes/Pharma/Procedure":{"title":"Procedure","links":["Notes/Pharma/ISA88","Notes/Pharma/Unit-Procedure"],"tags":[],"content":"A Procedure is an ISA88 defined structure that is the steps required to make a batch, a procedure is made up of Unit Procedures."},"Notes/Pharma/Process-Cell":{"title":"Process Cell","links":["Notes/Pharma/ISA88","Notes/Pharma/Unit","Notes/Pharma/Packing","Notes/Pharma/Manufacturing","Notes/Pharma/Procedure"],"tags":[],"content":"A Process cell is an ISA88 defined structure that contains Units. A Process Cell is typically a line or area such as a Packing line or Manufacturing area.\nA Process cell should only run one Procedure at a time."},"Notes/Pharma/Puck-Loader":{"title":"Puck Loader","links":["Notes/Pharma/Puck"],"tags":[],"content":"A puck loader is a piece of equipment that loads parts into a Puck."},"Notes/Pharma/Puck-Unloader":{"title":"Puck Unloader","links":["Notes/Pharma/Puck-Loader","Robotic-Arm","Notes/Pharma/Autoinjectors","Notes/Pharma/Puck","Notes/Pharma/Heat-Sealer","Notes/Pharma/Cartonner"],"tags":[],"content":"A Puck Unloader is a piece of equipment that completes the opposite operation of a Puck Loader. Typically made of a Robotic Arm to transport objects such as Autoinjectors out of Pucks into a downstream process such as a Heat Sealer or in a blister-free line straight to a Cartonner."},"Notes/Pharma/Puck":{"title":"Puck","links":["Conveyor-Belt","Notes/Pharma/Packing","Notes/Pharma/Autoinjectors","Notes/Pharma/Labeller","Notes/Pharma/Puck-Loader"],"tags":[],"content":"A puck is an object used to hold a part so that it can be carried on a Conveyor Belt, pucks are used to hold complex parts in a simple way to allow a process to occur.\nFor example pucks are used in the Packing of Autoinjectors to hold the autoinjector whilst it passes through a Labeller.\nPucks are loaded with a device using a Puck Loader."},"Notes/Pharma/Purified-Water":{"title":"Purified Water","links":["Deionisation","Distilation","Ultraviolet-sterilisation","Notes/Pharma/parental","assay","Notes/Pharma/Monograph"],"tags":[],"content":"Purified Water is water that is purified to meet strict chemical and biological requirements.\nPurified water must be treated from compliant drinking water usually through processes such as Deionisation,Distilation,Ultraviolet sterilisation.\nPurifed water is commonly used in non-parental drug manufacture and testing/assay.\nIt is a registered Monograph, most prominently in the [[United States Pharmacopeia."},"Notes/Pharma/RFID":{"title":"RFID","links":[],"tags":[],"content":"Radio Frequency Identification is a wireless technology implemented through a small chip with limited memory connected to a coil that acts as both a wireless power supply and data antenna.\nRFID is commonly implemented to identify objects, for example lanyards for security access to sites or applied to vessels to track proximity events (Enter/Exit rooms or vessel in location sensors)."},"Notes/Pharma/RTLS":{"title":"RTLS","links":[],"tags":[],"content":"Real Time Location System is a technology that makes use of fixed RF transmitters to triangulate the position of tags.\nDepending on the technology used RFID can be accurate to millimetres or meters.\nRTLS can be implemented to track position of vessels, products, pallets, people etc…"},"Notes/Pharma/Secondary-Manufacturing":{"title":"Secondary Manufacturing","links":["Notes/Pharma/Active-Pharmaceutical-Ingredient","Notes/Pharma/Bulk-Drug-Substance","Notes/Pharma/Vials","Notes/Pharma/Syringes","Dermatalogicals","Inhalations","Notes/Pharma/Manufacturing","Notes/Pharma/Bulk-Drug-Product","Filling","Lyophilization","Notes/Pharma/Assembly","Inspection","Notes/Pharma/Packing","Notes/Pharma/Oral-Solid-Dose","Notes/Pharma/Tablet-Pressing","Notes/Pharma/Coating"],"tags":[],"content":"Secondary manufacturing, sometimes called Fill &amp; Finish in steriles, is the process of taking raw Active Pharmaceutical Ingredient or Bulk Drug Substance and transforming this into its final form ready for sale.\nFor liquid products (Vials, Syringes, Dermatalogicals and Inhalations) this is typically: Manufacturing a Bulk Drug Product,  Filling the product into its dose form such as Vials or Syringes, Lyophilization if required, Assembly if required, then Inspection and Packing the product.\nFor Oral Solid Dose products this is typically: Manufacturing, Tablet Pressing, Coating, Packing."},"Notes/Pharma/Serialisation":{"title":"Serialisation","links":["Notes/Pharma/Labeller","Notes/Pharma/Optical-Character-Verification"],"tags":[],"content":"Serialisation is the process of assigning a unique serial number to every product supplied.\nEach product has its serial number applied by a Labeller and verified through Optical Character Verification. After supply the serialised code is verified against a live database before dispensing to ensure a genuine product.\nSerialisation is a key requirement of regulators across the world for sale of any drug."},"Notes/Pharma/Sterilisation-In-Place":{"title":"Sterilisation In Place","links":["Notes/Pharma/Sterilisation","Notes/Pharma/Moist-heat-sterilisation","Steam-Traps","Notes/Pharma/drainable","Notes/Pharma/lethality","Notes/Pharma/worst-case"],"tags":[],"content":"Sterilisation in place (most commonly called SIP) is the process of automated Sterilisation whilst a system is in place.\nSIP almost always functions through Moist heat sterilisation, as such it is key to ensure Steam Traps are in place at all drainable points.\nSIP requires a certain temperature to be reached throughout the system for a certain time to reach a lethality, to ensure the whole system is up to temperature a worst case reading is taken."},"Notes/Pharma/Sterilisation":{"title":"Sterilisation","links":["Notes/Pharma/pyrogen-free","Autoclave","Notes/Pharma/Sterilisation-In-Place"],"tags":[],"content":"Sterilisation is the process of removing viable microorganisms, it s key to note sterilisation does not intrinsically mean pyrogen free.\nSterilisation is commonly completed through an Autoclave or Sterilisation In Place."},"Notes/Pharma/Syringes":{"title":"Syringes","links":["Notes/Pharma/Vials","Notes/Pharma/Autoinjectors","Notes/Pharma/Aseptic","Notes/Pharma/Terminal-Sterilisation","Stopper","Notes/Pharma/Body","Notes/Pharma/Needle","Needle-Shield"],"tags":[],"content":"Syringes are a dose form similar to Vials but with the needle attached directly for ease of use. Syringes are also commonly used in Autoinjectors. Syringes are almost always Sterile either directly filled under Aseptic conditions or sterilised after filling throughTerminal Sterilisation.\nA syringe is typically made up of\n\nStopper\nBody\nNeedle\nNeedle Shield\n"},"Notes/Pharma/Tablet-Pressing":{"title":"Tablet Pressing","links":[],"tags":[],"content":""},"Notes/Pharma/Tamper-Evident-Label":{"title":"Tamper Evident Label","links":[],"tags":[],"content":"A Tamper Evident Label(TEL) is a label designed to break in a way that allows someone to check if a product has been opened previously.\nTamper Evident Labels are a control to ensure a genuine product supplied cannot be modified before given to a patient. Pharmacists are required to verify TEL status before sale of products ensuring a genuine product is supplied."},"Notes/Pharma/Terminal-Sterilisation":{"title":"Terminal Sterilisation","links":[],"tags":[],"content":""},"Notes/Pharma/Thawing":{"title":"Thawing","links":["Notes/Pharma/Active-Pharmaceutical-Ingredient","Notes/Pharma/Manufacturing","Notes/Pharma/Cold-chain","Notes/Pharma/Frozen-chicken","Notes/Pharma/Forced-Thaw","Notes/Pharma/Passive-Thaw"],"tags":[],"content":"Product thawing is the process of un-freezing Active Pharmaceutical Ingredient ready for Manufacturing and is usually one of the first steps in the manufacturing process. Products that require thawing are usually Cold chain products. I usually use a Frozen chicken simile to describe the process. There are two main ways to that a product, Forced Thaw and Passive Thaw. Products that are thawed typically have a minimum thaw time before being allowed to be used."},"Notes/Pharma/Tray-Unloader":{"title":"Tray Unloader","links":["Notes/Pharma/Assembly","Notes/Pharma/Packing","Notes/Pharma/Autoinjectors","Notes/Pharma/Puck-Loader","Notes/Pharma/Puck","Conveyor-Belt","Robotic-Arm"],"tags":[],"content":"A tray unloader is a piece of equipment used to unload parts from a tray. These are very commonly used in the Assembly and Packing of Autoinjectors due to the nature of discrete parts.\nIn Packing a Tray Unloader is commonly paired with a Puck Loader to move Autoinjectors out of a tray and into a Puck on a Conveyor Belt for further processing.\nTray unloaders commonly use a Robotic Arm to pick and place parts."},"Notes/Pharma/Unit-Procedure":{"title":"Unit Procedure","links":["Notes/Pharma/ISA88","Notes/Pharma/Procedure","Notes/Pharma/Operation","Notes/Pharma/Unit","Notes/Pharma/Unit-Procedure","Notes/Pharma/Depyrogenation"],"tags":[],"content":"A Unit Procedure is an ISA88 defined structure that belongs to a Procedure and contains Operations. A Unit Procedure defines a set of steps required to run on a Unit.\nFor example the Unit Procedure that runs on a Depyrogenation to process a load will follow a defined set of Operations and the load will be used as part of a wider Procedure."},"Notes/Pharma/Unit":{"title":"Unit","links":["Notes/Pharma/ISA88","Notes/Pharma/Unit-Procedure","Notes/Pharma/Process-Cell","Notes/Pharma/Equipment-Module"],"tags":[],"content":"A Unit is a structure defined in ISA88 that represents a piece of equipment. A Unit runs a Unit Procedure.\nAs per ISA88, units must belong to a Process Cell and may be made up of Equipment Modules."},"Notes/Pharma/Vials":{"title":"Vials","links":["Notes/Pharma/Aseptic","Notes/Pharma/Terminal-Sterilisation","Lyophilization","Vial","Stopper","Cap"],"tags":[],"content":"Vials are a dose form commonly used for supply to healthcare professionals for delivery to the patient, vials are almost always Sterile either directly filled under Aseptic conditions or sterilised after filling throughTerminal Sterilisation. Vials are also sometimes taken through a  Lyophilization process for drug stability before being made up at point of use especially for biologics or drugs that are unstable in liquid form.\nVials are typically made up of 3 main parts:\n\nVial\nStopper\nCap\n"},"Notes/Pharma/Water-For-Injection":{"title":"Water For Injection","links":["Notes/Pharma/Purified-Water","Notes/Pharma/pyrogen-free","Notes/Pharma/Aseptic","Notes/Pharma/Clean-In-Place","Product-Contact","Notes/Pharma/Monograph"],"tags":[],"content":"Water for Injection (WFI) is water that meets the requirements for Purified Water as well as being pyrogen free. Water For Injection must be used for Aseptic products and Clean In Place for Product Contact parts.\nIt is a registered Monograph, most prominently in the [[United States Pharmacopeia."},"Notes/Pharma/Wet-Bead-Mill":{"title":"Wet Bead Mill","links":["Notes/Pharma/Beads","Notes/Pharma/particle-size","Notes/Pharma/Fluidised-Bed","Notes/Pharma/Depyrogenation-Oven","Notes/Pharma/Unit-Procedure"],"tags":[],"content":"Wet bead mills use small Beads/balls to mill product down, the size of these beads determines the efficient particle size that the bead mill can create. In a sterile environment the sterility of these beads can be just as complex as the milling itself, requiring a method to clean and sterilise. Commonly using a Fluidised Bed, or other washer, and Depyrogenation Oven to achieve this.\nA wet bead mill, mills product by agitating the product with hard Beads effectively smashing the product down splitting it into smaller and smaller particles. A bead mill usually recirculates product around a larger tank to increase the amount of product milled in one Unit Procedure."},"Notes/Pharma/Wet-Granulation":{"title":"Wet Granulation","links":["Notes/Pharma/Granulation","Notes/Pharma/Fluidised-Bed"],"tags":[],"content":"Wet granulation is the process of Granulation where powders are sprayed with liquid to form granules.\nThis process is usually followed by a drying process using a Fluidised Bed."},"Notes/Pharma/drainable":{"title":"drainable","links":["Notes/Pharma/Blowdown"],"tags":[],"content":"Drainability refers to the ability of a system to drain its contents, this is most commonly completed by:\n\nAngling pipework into low points where drains can be installed so all liquid drains\nBlowdown of pipework to push liquid out of the system\n"},"Notes/Pharma/intrathecal":{"title":"intrathecal","links":["Notes/Pharma/Aseptic","Notes/Pharma/Depyrogenation"],"tags":[],"content":"Intrathecal is a delivery method of a drug straight into the spinal canal. As such Aseptic and Depyrogenation is of increased importance."},"Notes/Pharma/lethality":{"title":"lethality","links":["Notes/Pharma/F0-Value"],"tags":[],"content":"Lethality is the statistical likelihood of killing bacteria, is is commonly measured using F0 Value."},"Notes/Pharma/parental":{"title":"parental","links":["Notes/Pharma/Vials","Notes/Pharma/Syringes"],"tags":[],"content":"Parental drug delivery is the process of delivering a drug through other means than the typical digestive tract. Aka Vials, Syringes that are injected into the bloodstream."},"Notes/Pharma/particle-size":{"title":"particle size","links":["Notes/Pharma/Milling","Notes/Pharma/Granulation","Notes/Pharma/Critical-Process-Parameter"],"tags":[],"content":"Particles size can be reduced through Milling and increased through Granulation to meet the product requirements.\nParticle size is usually a Critical Process Parameter and as such must be tested, particle size analysers are commonly placed inline in a process where possible allowing high levels of control and monitoring. For small particulate sizes though this can be complex and expensive and as such an offline test is still commonly used."},"Notes/Pharma/pyrogen-free":{"title":"pyrogen free","links":["Notes/Pharma/pyrogens","Notes/Pharma/Sterilisation","Notes/Pharma/parental"],"tags":[],"content":"A product being pyrogen free is to contain no pyrogens, this is a common requirement beyond Sterilisation in parental drugs.\nAlso referred to a non-Pyrogenic."},"Notes/Pharma/pyrogens":{"title":"pyrogens","links":["Notes/Pharma/Endotoxins"],"tags":[],"content":"Pyrogens are fever causing substances, in most cases in pharmaceuticals these are Endotoxins."},"Notes/Pharma/worst-case":{"title":"worst case","links":["cold-store","Notes/Pharma/Sterilisation-In-Place"],"tags":[],"content":"A worst case point is the point in a system that is in the worst possible circumstance, for example in a cold store the point in the room that is the hottest or in Sterilisation In Place the point that is the coldest."},"Posts/Designing-a-Wet-Bead-Mill":{"title":"Designing a Wet Bead Mill","links":["Notes/Pharma/Pharmaceutical-Manufacture","Notes/Pharma/Milling","Notes/Pharma/Cold-chain","Notes/Pharma/Wet-Bead-Mill"],"tags":[],"content":"Hopefully you have come to this page as you are interested in finding more out about Wet Bead Milling in the Pharmaceutical Manufacture domain. In this post I will cover the basics all the way through to designing a fully automated milling platform. For those of you who have heard the term but aren’t familiar with the process, a bead mill at its core agitates beads in a chamber filled with product to reduce the particulate size. In the pharmaceutical world, milling is commonly used on products that agglomerate meaning that these products naturally form clumps which in turn reduces the effectiveness of medication, the intent of Milling is to break down these particles into smaller, useable particles. Active Pharmaceutical Ingredients (APIs) that agglomerate typically do so quicker the warmer they are, in turn driving a requirement to reduce the amount of temperature time the product is subjected to.\nThis in turn drives our requirements for a milling platform that we will design as below:\n\nSystem must be capable of milling various pharmaceutical products\nSystem must be capable of controlling the product temperature for Cold chain products\nSystem must be capable of reducing manual intervention as much as possible\n\nDesigning a wet bead mill\nTo begin the design of a sterile wet bad mill we first have to start with a mill. A mill agitates beads in a chamber to break down a product into smaller chunks, a cutaway is shown below:\n\nIn this example, product enters from the top right and is pushed down the chamber to the left smashing into beads that are agitated by the central rotating agitator in turn breaking down the product into smaller particles. The product is filtered on the outlet allowing product through into the tank without letting beads out from the chamber.\nBelow you can see the P&amp;ID for the heart of a Wet Bead Mill The chamber as described above with product from a vessel being recirculated using a product pump.\n\nThis heart of a wet bead mill is fairly simplistic on its lonesome, it is the additional complexities that start to build a more vast machine. In this case one requirement is to ensure that as much product as possible can be retrieved without being left in the system post milling. A main factor in this is avoiding system low points where product will sit at the end of a batch by sloping the piping downwards one approach is shown below making use of a final product tank, this tank allows us to better retrieve all product from the system as well as allow for simple draining from the primary tank.\n\nAs seen above the second tank can be used to store completed product at the end of a milling cycle. I would like to draw attention to the pipe marked 1, this section of pipe is a dead leg in the recirculation loop whilst milling, as such product can sit uncirculated through the milling process as well as leave a cavity for bacteria, as such it is imperative to the design of a sterile mill to keep deadlegs as small as possible by mounting the deadleg valve as close as possible to the product loop. On the other hand it is also key that product naturally drains out of the loop as such to get the most return out of the loop as well as being key down the line for CIP/SIP drainability.\nA final thing to note that is not shown in the design above is that continually agitating ultra hard beads in a stainless steel chamber slowly breaks down the stainless steel as well as the product, as such not only is it key to monitor the condition of your agitator and chamber wear parts, it is also key to consider the contamination of product with small stainless steel chippings. A final filter should be used to prevent particulates entering the final product as well as the use of a magtrap to catch larger particles of steel before damaging a final filter.\nOne of the requirements for this system for this process are the ability to add and remove beads from the chamber. The added complexity for this is that addition must be possible in a sterile manner.\n\nContinuing on from the previous design, to add beads into the system we can use a separate sterile canister to drop beads into the chamber using the exisiting product loop piping. This requires either a bead sterilisation process adding onto the mill or more commonly a sterile to sterile connection (such as a split butterfly valve) to attach and drop pre-sterilised beads into the sterilised mill. To remove beads is a more complex operation requiring a low point in the chamber to remove beads through, a valve to open and close this is required, again this needs to have a very small dead leg. This valve opens to a separate canister filled with water that recirculates through the product loop to drain out the beads left in the system at the end of a batch.\nOne complexity in the use of a sterile wet bead mill is maintaining a sterile chamber whilst using a rotating agitator, standard bearings are not designed for either wet operation or sterile environments with a high potential for contaminating the pharmaceutical product this is not acceptable. The most modern way of getting around this issue is the use of a magnetic drive that couples the agitator through the back of the chamber to a drive motor although historically these have required mechanical seals pressurised with WFI (Water For Injection) grade water due to their tendency to leak.\n\nAn example of this can be seen above where a seal reservoir recirculates water through the mechanical seal using a pump. This is a good time to mention that for many reasons I will not be showing off designs all the way down to supplies (Such as WFI, CA, Steam etc) and only detailing the basic theory of sterile bead milling.\nAs previously discussed a common requirement for pharmaceutical products that require milling is temperature control. In particular, product cooling to prevent agglomeration although controlling heat instead is identical with inverted control. In this system the two key locations where product is changed and stored are the chamber where milling is occuring and heating the product and the storage tank. For both of these systems a jacket should be applied with appropriate heating or cooling flow/temperature control.\n\nThis is the overall basis of a sterile milling platform, of course, there is a requirement to design the control of these systems and monitoring of key values as well as the implementation of CIP/SIP process of which I will not detail here to prevent any copyright/oversharing of confidential information, if you wish to understand the design of sterile milling, would like to collaborate on anything or think I may have missed any useful information feel free to reach out and I’d be glad to help."},"Posts/F1-Strategy-Analytics":{"title":"F1 Strategy Analytics","links":["tags/F1"],"tags":["F1"],"content":"F1\nHaving recently stumbled across the Open F1 API I’ve been intrigued as to what could be done with the data, given my background in data analytics I was keen to take a look into what’s available and could be done with it.\nOn top of this, I recently applied and interviewed for a role at Aston Martin F1 where there was a programming interview that piqued my interest (Annoyingly I didn’t practice my python skills before hand and spent the whole interview trying to remember syntax rather than focus on the problem). The interview question was around tyre strategy and trying to figure out when would be the best time to swap tyres given a starting pace and linear degredation of each tyre type. Although I got the Pseudocode working trying to get arrays/dictionarys/lists working together without the internet proved to be too much for the 20 minute timer.\nSo, like any sane person, I slept on it and continued to obsess leading me to do this in my spare time.\nThe first question I wanted to answer was, for a one stop race, how can I visualise the options and strategic impact of each of these, turns out the answer is fairly simple. For any race we have a loop of laps where we constantly are adding time every lap based on our tyre performance as below:\ndef findLapTime(tyreNum, tyreNum2,lapLength,tyreChange):\n\traceTime = 0\n\ttyreAge = 0;\n\ttry:\n\t\tfor lapNum in range(0, lapLength):\n\t\t  if(lapNum==tyreChange):\n\t\t\traceTime = raceTime + pitStopDuration + TyreLaptimes[tyreNum2][0]\n\t\t\ttyreAge = 0\n\t\t  elif(lapNum&gt;tyreChange):\n\t\t\traceTime = raceTime  + TyreLaptimes[tyreNum2][tyreAge]\n\t\t  else:\n\t\t\traceTime = raceTime  + TyreLaptimes[tyreNum][tyreAge]\n\t\t  tyreAge = tyreAge + 1\n\t  except:\n\t    return np.nan\n\t  return raceTime\nBeyond that, we have a choice, at what lap do we pit, in this case we are brute forcing and will just try them all to see how long each race takes, and also the choice of tyres, inital tyres and final tyres:\nlapLength = 25\npitStopDuration = 21\ntyreTimes = np.zeros((len(TyreLaptimes),len(TyreLaptimes),lapLength))\n \nfor tyreNum in range(0, len(TyreLaptimes)):\n  for tyreNum2 in range(0, len(TyreLaptimes)):\n    for lapNum in range(0, lapLength):\n      tyreTimes[tyreNum][tyreNum2][lapNum] = findLapTime(tyreNum,tyreNum2,lapLength,lapNum)\n \nAnd that’s it, we have an array of our tyre options and pit time options. Of course this is limited by the data you have access to (We’ll discuss later but I only used 16 lap data for each tyre ), a quick plot and we get this:!\nI’ve hidden the plots where the same tyres are used but you could easily add checking into the algorithm so that isn’t an option. In this case we can see the best strategy is to use tyres 0 and 2 (Soft and hard) and pit at either lap 9 or 16 depending on if you’re on softs or hards first.\nBeyond this I then ask the question, what about a two stop race, we will then effectively have a 3d surface of each tyre option of when to pit. A little modification to our code to add two pits and another set of tyres to use we get:\ndef findLapTime2Pit(tyreNum, tyreNum2,tyreNum3,lapLength,tyreChange,tyreChange2):\n  if(tyreChange2&lt;=tyreChange):\n    return np.nan\n \n  raceTime = 0\n  tyreAge = 0;\n  try:\n    for lapNum in range(0, lapLength):\n      if(lapNum==tyreChange):\n        raceTime = raceTime + pitStopDuration + TyreLaptimes[tyreNum2][0]\n        tyreAge = 0\n      elif(lapNum==tyreChange2):\n        raceTime = raceTime  + pitStopDuration + TyreLaptimes[tyreNum3][0]\n        tyreAge = 0\n      elif(lapNum&gt;tyreChange2):\n        raceTime = raceTime  + TyreLaptimes[tyreNum3][tyreAge]\n      elif(lapNum&gt;tyreChange):\n        raceTime = raceTime  + TyreLaptimes[tyreNum2][tyreAge]\n      else:\n        raceTime = raceTime  + TyreLaptimes[tyreNum][tyreAge]\n      tyreAge = tyreAge + 1\n  except:\n    return np.nan\n  return raceTime\n \nfor tyreNum in range(0, len(TyreLaptimes)):\n  for tyreNum2 in range(0, len(TyreLaptimes)):\n    for tyreNum3 in range(0, len(TyreLaptimes)):\n      for lapNum in range(0, lapLength):\n        for lapNum2 in range(0, lapLength):\n          tyreTimes2Stop[tyreNum][tyreNum2][tyreNum3][lapNum][lapNum2] = findLapTime2Pit(tyreNum,tyreNum2,tyreNum3,lapLength,lapNum,lapNum2)\nAnd again after a quick plot in Plotly we get 3D charts of all laps, it’s incredibly difficult to see with each overlayed so here’s an example of one 3 tyre strategy (Hard-Soft-Inters):\nI appreciate it’s still quite hard to see what’s going on here but in the 3D interactive window provided by plotly it’s much easier to understand (Speaking of which feel free to view my live code here: Colab). If you think of it in terms of the previous 2D sketch we have a bunch of arches as you can see at the bottom left, all stacked up into a 3D surface. In this instance the best strategy is the bottom right datapoint with a pit at 16 and 24.\nWhen originally writing this code I created some fake datapoints just like in the interview going from fast lap times to slower lap times. In reality this isn’t the case, some tyres need a lap or two to get nice and hot for grip and then degrade over time at differing non-linear rates. My plan was to use the F1 API data to gather these tyre details and calculate their degradation over time, see below a chart of medium tyre lap times for Silverstone this year. \nAlthough this has allowed me to gather some real data that the above graphs are based on I ran into a few issues that can definitely be fixed with enough time but not a job for today such as:\n\nDoesn’t take into consideration track status ( yellow flag,etc…)\nDoesn’t take into consideration analogue track variables (Rain, dryness, temp, rubber on track)\nA lot of cars in the race are bumper to bumper, not limited by tyres but by the car in front, in this case lots of people are giving the same stint times.\nOne race is not a lot of data, on issue can throw all the readings out\nStruggle to compare tyre data between races as the tracks all have different times, realistically need to do this in some ratio rather than time to allow more data and better comparisons.\nMany many more\n\nIf you’re interested here’s my code (This was a draft so I know full well it’s not well done and definitely a lot of stuff that can even be taken out)\ndef get_laps_data(session_key, driver_number):\n  try:\n    url = f&quot;api.openf1.org/v1/laps{session_key}&quot;\n    response = requests.get(url)\n    response.raise_for_status()  # Raise an exception for bad status codes\n    data = response.json()\n    if isinstance(data, list):\n      return data\n    elif isinstance(data, dict) and &quot;MRData&quot; in data and &quot;RaceTable&quot; in data[&quot;MRData&quot;] and &quot;Races&quot; in data[&quot;MRData&quot;][&quot;RaceTable&quot;]:\n      return data[&quot;MRData&quot;][&quot;RaceTable&quot;][&quot;Races&quot;][0][&quot;Laps&quot;]\n    else:\n      print(&quot;Unexpected JSON format&quot;)\n      return None\n  except requests.exceptions.RequestException as e:\n    print(f&quot;An error occurred: {e}&quot;)\n    return None\n  except (KeyError, IndexError, TypeError):\n    print(&quot;Error processing JSON response&quot;)\n    return None\n \n \ndef get_stints_data(session_key, driver_number):\n  try:\n    url = f&quot;api.openf1.org/v1/stints{session_key}&quot;\n    response = requests.get(url)\n    response.raise_for_status()  # Raise an exception for bad status codes\n    data = response.json()\n    if isinstance(data, list) and data: #check if data is a list and not empty\n      return data\n    else:\n      print(&quot;Unexpected JSON format or empty data&quot;)\n      return None\n  except requests.exceptions.RequestException as e:\n    print(f&quot;An error occurred: {e}&quot;)\n    return None\n  except (KeyError, IndexError, TypeError):\n    print(&quot;Error processing JSON response&quot;)\n    return None\n \nsession_key = 9558\ndriver_number = 77\nlaps_data = get_laps_data(session_key, driver_number)\nstints_data = get_stints_data(session_key, driver_number)\n \ntyre_performance = {}\nif stints_data and laps_data:\n    for stint in stints_data:\n        compound = stint[&#039;compound&#039;] tyre_performance[compound,stint[&#039;session_key&#039;],stint[&#039;driver_number&#039;],stint[&#039;stint_number&#039;]] = []\n        for lap in range(stint[&#039;lap_start&#039;] - 1, stint[&#039;lap_end&#039;]):\n            try:\n                time = laps_data[lap][&#039;lap_duration&#039;]\n                if time is not None:  tyre_performance[compound,stint[&#039;session_key&#039;],stint[&#039;driver_number&#039;],stint[&#039;stint_number&#039;]].append(time)\n            except IndexError:\n                print(f&quot;Lap data not found for lap {lap + 1}&quot;)\n    print (tyre_performance)\nelse:\n    print(&quot;Could not retrieve tyre performance data.&quot;)\ndx = {k: v for k, v in tyre_performance.items() if &quot;MEDIUM&quot; in k[0]}\n \naverage_lap_times = {}\nfor key, lap_times in dx.items():\n    for i in range(len(lap_times)):\n        lap_number = i + 1  # Lap numbers start from 1\n        if lap_number not in average_lap_times:\n            average_lap_times[lap_number] = []\n        average_lap_times[lap_number].append(lap_times[i])\n \n \nfor lap_number, lap_times in average_lap_times.items():\n    average_time = sum(lap_times) / len(lap_times) if lap_times else 0  # Handle empty lists\n    print(average_time,&quot;,&quot;)"},"Posts/How-3D-Printing-is-Transforming-Manufacturing-Sites":{"title":"How 3D Printing is Transforming Manufacturing Sites","links":["tags/3DPrinting"],"tags":["3DPrinting"],"content":"3DPrinting\nIntroduction\nOver the past few years, 3D printing has evolved from a futuristic concept to an accessible, everyday tool. What was once confined to research labs is now widely available, with cutting-edge printers costing less than £1,000 and software so intuitive that anyone with a computer and a mouse can use it. The barriers to entry have nearly vanished—making 3D printing a game-changer for manufacturing.\n\nHow 3D Printing Benefits Manufacturing\nFor manufacturing sites focused on improving OEE, reducing costs, minimising deviations, enhancing safety, and accelerating improvements, 3D printing offers immense potential.\n1. Continuous Improvement at Speed\nContinuous Improvement (CI) has long been a cornerstone of manufacturing, but the ability to create any tool or fixture in minutes for pennies is a revolutionary shift. Traditionally, Poka-Yoke tools and 5S shadow boards could take weeks to produce and cost thousands in materials alone—often making smaller improvements impractical.\nWith 3D printing, almost any improvement becomes feasible, with rapid prototyping enabling same-day implementation instead of waiting months.\n2. Rapid Replacement of Obsolete Parts\nIf you’ve worked in manufacturing, you’ve likely encountered the frustration of needing a small plastic cog, clip, or housing, only to hear:\n\n“That’s obsolete now.”\n“We can’t supply that part individually—only as a full unit.”\n\nThe result? A £5,000+ bill for a replacement unit, 99% of which you don’t actually need.\nWith 3D printing, a 15-minute CAD design, 30-minute print, and 10p of plastic can produce a bespoke replacement part—restoring functionality in under an hour while saving thousands.\n3. Reducing Stores Stock &amp; Waste\nManufacturing sites maintain extensive spare parts inventories to minimise downtime, but this comes at a cost:\n\nStorage space &amp; management complexity\nObsolescence &amp; waste (parts bought, stored for years, then discarded)\nCapital tied up in stock that may never be used\n\n3D printing enables a digital inventory—storing CAD files instead of physical parts. Instead of stockpiling rarely used items, parts can be printed on demand, reducing costs and waste.\nWhile 3D printing won’t replace all stores inventory (certain parts require specific materials or tolerances), it can significantly reduce reliance on low-use, non-critical stock—often printing parts faster than a trip to stores.\n4. Cutting External Manufacturing Costs\nEvery manufacturing site relies on custom jigs, fixtures, and tool holders, often requiring external suppliers who charge £2,500+ per part and take weeks to deliver.\nWith in-house 3D printing, you can:\n\nProduce what you need, when you need it—at minimal cost\nGet parts faster and cheaper than outsourcing\nRetain designs, enabling easy replication across multiple lines or sites\n\nFor multi-site enterprises, sharing designs across locations unlocks additional efficiencies—turning one site’s innovation into a network-wide improvement.\n\nBusiness illustrations by Storyset\n5. Prototyping for Faster, Smarter Design\nNot every application suits 3D printing—some environments require machined metal or milled PEEK due to temperature, chemical exposure, or sterility requirements. But before committing to expensive manufacturing methods, rapid 3D-printed prototypes allow for:\n\nFaster design iteration and testing\nAvoiding costly mistakes before final production\nReduced material waste and shorter development cycles\n\nThis approach ensures that when high-spec parts must be outsourced, they are right the first time—saving both time and money.\n6. Empowering Employees to Innovate at Speed\nBeyond cost savings, 3D printing unlocks something even more valuable: rapid innovation at every level of the organisation.\nA typical site improvement process involves:\n\nRaising an idea to management\nBuilding a business case for funding\nVendor selection,\nDesign, Prototyping, and Delivery\nOnly then allowing for benefit to be seen\n\nMany great ideas die before they begin because of the effort required—or employees fearing public failure.\nWith open access to 3D printing, employees can bring their ideas to life instantly. The worst-case scenario? Fail fast. The best case? Deliver fast. All whilst keeping cost minimal.\n\nHow to Implement 3D Printing Successfully\nSo, you’re convinced and ready to bring 3D printing to your site—but how do you ensure a smooth and impactful implementation?\nChoose the Right Technology\nThanks to rapid advancements in consumer 3D printing, high-quality, reliable printers are now more affordable than ever. When starting out, prioritize printers that offer quick setup, low maintenance, and network connectivity to make usage as seamless as possible.\nAt the time of writing, Bambu Lab and Prusa printers stand out for their speed, precision, and affordability, However, the market is evolving fast, so always research the latest models before purchasing.\nBuild a Parts Database (Without Overcomplicating It)\nMany sites delay adoption by waiting for the “perfect” parts management system—but you don’t need an expensive software solution on day one. The key is simply to store and organize designs from the start, so they can be easily reused later.\nA shared fileshare, Teams site, or SharePoint folder is more than enough to get going. As 3D printing adoption grows, you can transition to a more structured system for managing digital inventory.\nAvoid Red Tape—Let Innovation Thrive\nOne of the biggest mistakes companies make is over-restricting access to 3D printing. While having an owner to maintain the printers is important, gatekeeping the technology stifles creativity and slows innovation.\nYes, accidents will happen—someone will scratch a build plate or clog a nozzle—but considering replacement parts cost £15 or less, the trade-off is worth it. Keep a few spares on hand and focus on removing barriers so employees can innovate freely.\nSimilarly, avoid the bureaucracy of cross-charging materials to different teams. The administrative burden of tracking filament usage often costs more than the filament itself. Instead, treat materials as a shared resource to encourage open experimentation and rapid improvements.\nEmpower Everyone to Participate\nOnce the printers are up and running, make sure everyone knows they’re available. 3D printing is only as powerful as the ideas behind it, and the more people involved, the greater the impact.\nAs word spreads and adoption grows, you’ll quickly find that demand outpaces printer capacity—a great problem to have! This natural momentum will justify further investment in more printers and advanced capabilities.\nGet Expert Support\nFinally, don’t go it alone. Many companies specialize in 3D printing implementation and can help you select the right printers, materials, and software while sharing best practices from other industries.\nA company I’ve personally worked with and highly recommend is 3DGBIRE. To be clear, this isn’t a paid endorsement—I just found their experience and support invaluable in setting up and scaling 3D printing successfully.\nConclusion\n3D printing is no longer just a futuristic concept—it’s an essential tool for modern manufacturing sites. By integrating it into Continuous Improvement, stores stock management, prototyping, and in-house production, sites can reduce costs, improve response times, minimise downtime and enable grassroots innovation.\nIt would be great to hear from you guys on your thoughts on 3D printing."},"Posts/Kubernetes-Overview":{"title":"Kubernetes Overview","links":["Notes/Digital/Containerisation/Kubernetes","Notes/Digital/Containerisation/Container-Runtime","Notes/Digital/Containerisation/Docker","Notes/Digital/Containerisation/Container-Image","Notes/Digital/Containerisation/High-Availability","Notes/Digital/Containerisation/Pods","Notes/Digital/Containerisation/Container","Notes/Digital/Containerisation/Nodes","Notes/Digital/CICD","Notes/Digital/Containerisation/Image-Repository","Notes/Digital/Containerisation/Microservices","Notes/Digital/Containerisation/Control-Plane","Notes/Digital/Containerisation/Proxy","Notes/Digital/Containerisation/kubelet","Notes/Digital/Containerisation/Kubernetes-services","Notes/Digital/Containerisation/kube-proxy","Notes/Digital/Application-Programming-Interface","Notes/Digital/Containerisation/kube-apiserver","Notes/Digital/Containerisation/Autoscaling","Notes/Digital/Containerisation/kube-controller-manager","Notes/Digital/Containerisation/kube-scheduler","Notes/Digital/Containerisation/etcd","Notes/Digital/Containerisation/Dockerfile","Notes/Digital/Containerisation/Manifest","Notes/Digital/Containerisation/Helm","Notes/Digital/Containerisation/Helmcharts","Notes/Digital/Open-Container-Initiative","Notes/Digital/Containerisation/Ephemeral","Notes/Digital/Containerisation/Stateful-Set","Notes/Digital/Containerisation/Persistent-Volume-Claim","Notes/Digital/Containerisation/kubeadm"],"tags":[],"content":"What is it\nKubernetes (k8s) is a system for container orchestration. Kubernetes is not a Container Runtime such as Docker. Kubernetes sits above and manages those containers.\nWhy is it useful\nDeploying a containerised platform brings many benefits to both application managers and consumers such as:\n\nFaster deployment - Containers can be spun up and down in seconds\nPortability - Containers can be deployed on any supported OS and always work the same\nStandardisation - Container installs are always based on a released Container Image\n\nWith Kubernetes deployed to manage these containers we get even more impressive benefits:\n\nHigh Availability- Run Pods of Containers across different Nodes to achieve fault tolerance\nSelf healing - Automatically get containers back into a running state after failure\nScaling - Automatically scale Pods and Nodes to take up demand changes on the fly\nCICD - Update Containers automatically with a push to the Image Repository. (Can specify what version to pull if not wanted).\nMicroservices - A microservices architecture allows all elements of a system to work and scale independently in isolation.\n\nHow does it work\nNow lets get to the meat of if, how does Kubernetes work, to set expectations I will be covering the basic architecture of a standard kubernetes setup not the in-depth backend workings.\nAt Kubernetes core there are two main components:\n\nControl Plane - The brain of kubernetes (Does the control)\nNodes - The body of kubernetes (Does the work)\n\nIn a cloud environment your cloud provider will almost always manage the control plane and let you decide what goes onto the Nodes (Aka Cloud manages the infrastructure and you choose what it does).\nBoth of these core components are typically ran across different servers with multiple instances of each running to allow for High Availability across both the Kubernetes management and the jobs running in the Nodes.\n\nNodes\nNodes are individual instances of computers running, these can have any supported OS and are typically VM’s such as EC2 instances in AWS just like you would use in a classical computing environment.\nNodes run the Containers through a Container Runtime most commonly Docker.\nNodes (sometimes called Worker Nodes) are made of four main components :\n\nContainer Runtime\nContainers\nNode Agent\nProxy (Not always required)\n\n\nContainer Runtime\nA container runtime (almost always Docker) is used to run the desired containers.\nContainers\nContainers are your packaged software that is running on the Node such as a database, API, Backend service, frontend server etc…\nThese containers are ran in logical groups called Pods that can be scaled as required.\nNode Agent\nA node agent sits on your node and collects data about your Pods and Containers spun up by kubernetes.\nIn kubernetes the default node agent is called kubelet\nProxy\nA Proxy is installed on nodes to allow Kubernetes services to be implemented. This allows for exposing network points to Pods that require it.\nIf this is not a requirement a proxy does not need to be installed.\nAs Pods are spun up and down as required with differing IP’s a proxy allows a specific Kubernetes services address to be used and the proxy can re-direct this traffic depending on what Pods are currently up.\nThe default kubernetes proxy is kube-proxy.\nControl Plane\nThe control plane is the brain of kubernetes, this is where kubernetes manages the clusters state. The control plane, in production, typically sit separate from the worker Nodes to ensure High Availability.\nIn a typical cloud deployment, the control plane is offered off the shelf with your cloud providers structure ready for your configuration.\nFour core parts make up the Control plane\n\nAPI\nController Manager\nScheduler\netcd\n\n\nAPI\nThe Application Programming Interface acts as the interface layer for the control plane as well as between control plane components. Any communication to/from the control plane occurs through this API.\nThe default controller manager is kube-apiserver.\nController Manager\nThe Controller Manager is the component of kubernetes that monitors the status of Nodes through the API, detecting node failures and spinning up new nodes as required.\nThe controller manager can be configured to manage based on many criteria using different controllers such as Autoscaling.\nThe default controller manager is kube-controller-manager.\nScheduler\nThe scheduler is the component of kubernetes that monitors load on the Pods and selects which node they should run on.\nThe default scheduler is kube-scheduler.\netcd\netcd is the core datastore for kubernetes, any information kubernetes needs to keep such as keys, configuration date, cluster states etc..\netcd stores and serves its data over kube-apiserver.\nA High Availability etcd can be run in two different modes:\n\nStacked - etcd runs on the Control Plane nodes\nExternal - etcd runs on separate nodes\n\nThere are lots of reasons to pick either but the core difference is stacked requires less control nodes but has less redundancy in case of failure.\nOther elements\nAs you may have realised by reading about the Control Plane and Nodes sections, there is a requirement to define your workloads running on your cluster. There are a few ways Kubernetes and Docker require you to do this.\n\nTo create a Container you need a Container Image which is the executable package run on the Container Runtime. Container Images are most commonly created using a Dockerfile that describes how the image is built.\nOnce you have a Container Image to run, you then need to describe to Kubernetes how this is to be managed typically through a YAML Manifest file. There is a system commonly deployed alongside Kubernetes to help manage these Manifest files called Helm which allows you to create, store and manage Helmcharts.\n\nDifferent cloud providers manage these in different ways, for example Azure has a Azure Container Registry (ACR) that manages both container images and Helmcharts and any Open Container Initiative Artifacts.\nWhat if my application is stateful\nKubernetes pods scale up and scale down based on needs, this means any data associated to that pod that will also be scaled down, these are known as Ephemeral. Certain applications change how they respond based on what has happened previously and thus require some level of history to be stored, in Kubernetes this is completed through a Stateful Set and storing Pods data in an automatically linked Persistent Volume Claim.\nOther applications for example a OPC server may require some level of config to be stored to define how the OPC server should act. This can be completed through a Persistent Volume Claim storing the configuration which can then be accessed from any active Pods.\nOther info\nK8s is a great tool for production systems dealing with lots of complex systems all scaling in parallel. In the world where the complexity isn’t required and a more simple installation is required there are a few other options that follow the same principles as a full k8s install such as:\n\nMinikube - All runs on 1 VM so good for testing but loose most benefits of kubernetes\nk3s - Lightweight kubernetes, missing some kubernetes functionality but doesn’t use docker by default.\nMicrok8s - Production ready kubernetes, missing some kubernetes configuration options.\nThese are commonly deployed in bare-metal approaches where you are already restricted by hardware.\n\nGetting Started\nIf you’re on-board and want to start making a High Availability Kubernetes cluster, you can start to setup your installation using kubeadm to quickly get a production ready cluster running or go to your favourite cloud provider and spin up a cluster in minutes."},"Posts/Lego-F1-car":{"title":"Lego F1 car","links":["tags/3DPrinting","tags/F1"],"tags":["3DPrinting","F1"],"content":"3DPrintingF1\nFor those that know me personally, it won’t come as much of a shock that I’ve never been a huge supporter of any sport, although I enjoy taking part in most, I’ve not really taken the leap into watching or competitively supporting any sport or teams, even e-sports for games I play regularly never appealed. Apologies, I know this might sound like a ramble but I’m getting there.\nRecently, however, after being subjected to two rounds of “Re-Education” this year at Silverstone and Qatar respectively, F1 has turned into weekly a nail-biting regime somehow hoping that my support can influence the McLaren car (Or even better Bottas) to go just that millisecond faster.\nAlongside this new found addiction, like many people nowadays, especially those that found their way into the engineering world, I grew up loving Lego and all of the cool things you could build with it, many of which became sentimental to me. As you can imagine, once I found out Lego now create F1 cars I had to buy one, especially as it was my partners upcoming birthday who is also currently a McLaren fangirl. Although I’d love the huge model version, I’m not quite dedicated enough to splash £200 on a piece of plastic no matter how cool it looks and instead landed on the ~£22 model .\nOnce the model had been acquired, gifted and built it brought back the memories of the pain, where does it go now? Thankfully I’ve been practicing my 3D design and printing skills recently and wanted to put them to use. First of all I found a model online  that seemed to do the trick, create a nice angle to display the Lego piece on a desk with no risk of it driving off the end.\n\nAlthough that works fine I have a vision that this would look awesome hanging on the wall, making it look like we’re watching a top down view of the car racing along just like you see on TV. After a quick search I found nothing of the sorts, which is a great excuse to get into Fusion and start modelling, a simple hanging style measured exactly to line up with the Lego pieces so you will only be able to see the arms holding it up, with a single screw hole for easy mounting onto the wall or if you’re feeling brave (or reckless) with your model just a bit of glue. And this is what I landed on.\n\nAfter a few iterations to tweak dimensions so that it fits perfectly to the model and can be slid onto and off of the wheel rod without them needing to be removed I managed to print something I was happy with that worked well. My only concern was the thinest part of the arms but after a good few uses and weight testing I was happy with how it worked, any thicker and it would be to difficult to attach or not give a large enough section of circle to keep the car attached, both of which are worse cases than needing to re-print the model if it ever broke. In the photo below however I know it looks a little scraggly (Although you’ll not see it in operation so not too much of a concern) but trust me this is purely down to my horrendously calibrated Ender 3. Overall I’m fairly happy with the design, now I only need is a wall to hang it on…\n\n\nFor those interested in the design I have added it onto printables to download and print, I’d be really happy to see anyone using this model so please drop a make photo if you do!\nPrintables"},"Posts/Pharmaceutical-Filling-techniques":{"title":"Pharmaceutical Filling techniques","links":[],"tags":[],"content":"Piston Filling\nIn piston filling, a piston retracts drawing out a specific volume of liquid, similar to a syringe being loaded from a vial at the doctors. This piston is then pushed in forcing the dosed liquid out, this is shown below by two non return valves but in practice this is usually done mechanically by rotating to cover the inlet/outlet as required for sterility. This stroke length must be mechanically tuned to ensure correct fill volumes, once set this method is generally stable but can require precise tuning. This method allows for a wide range of product parameters to be used due to no dependency on product viscosity. \nPiston filling can be adapted to work across a wide range of fill volumes from sub millimetre to litres but in most cases requires specific pistons to be made for each volume. Piston technology is almost always implemented using stainless steel but can connect into single use setups for product supply or filling needle setups to minimise CIP/SIP requirements.\nWhilst pistons are generally low frothing, this can still be an issue especially at the start and end of a filling cycle due to air/nitrogen getting mixed in the piston once dosed. Piston filling generally has low feedback to the filling system meaning there is a large reliance on IPC checks and system validation to prove the system conditions are acceptable.\n\nTime Pressure Filling\nFollowing Hagen-Poiseuille equation, where where  A is the cross sectional area of the pipe,  Delta rho is the differential pressure, mu  is the dynamic viscosity and  L the length of pipe. The volumetric flow of a pipe can be defined by rearranging for Q  leading to the below equation.\nQ = \\frac{A^2 \\Delta \\rho}{8 \\mu L}\nFollowing this principle if the physical properties of the pipework and the product being filled are known, for simplicity, the volumetric flow can be directly calculated based on the pressure the product is under and the system/product constant  K. By then controlling how long this flow rate occurs (ton), the fill volume can be calculated by the below.\nV = K  \\Delta  \\rho  t_{on}\nIt’s through this process time pressure filling works, by controlling/knowing the pressure and fill time, fill volumes can be accurately met with very accurate repeatability using a setup similar to the one below where V01 is used to pressurise the vessel as controlled by PI01, PI01 is also used to measure Delta rho for the fill calculation alongside ton of V02.\n\nFor more accurate calculation, the constant K can be automatically updated through in process fill weight checks to account for changes in product viscosity. \nDue to the simplicity and isolation from outside factors, this filing technique is very agile allowing for a wide range of products to be filled with simply a single parameter change whilst staying accurate and repeatable whilst also minimising product foaming as there is little product agitation. This filling technique is also format agnostic, without need for any format requirements any fill volumes, neck sizes or bottle shapes can be filled with little adjustment.\nThis process does however require PI01 and V02 to be tightly calibrated and maintained to ensure accurate fill weights. Due to the assumptions of the Hagen-Poiseuille equation, the process pipework must be designed properly for this application such as the surface finish of the pipes to reduce resistive losses and not overly short or long pipework, in cases where these are requirements the time pressure fill calculation must be expanded to take Bernoulli’s principle into account and as with all pharmaceutical systems, the system must undergo extensive validation in all scenarios to prove effectiveness before use due to the criticality of accuracy.\nPeristaltic pump filling\nA peristaltic filling process makes use of sterile single use setup rubber hosing in a peristaltic pump to dose specific quantities of liquid. A peristaltic pump is a very sterile method of filling as there is no intrusion or direct contact required due to the base principles of a peristaltic motor. A peristaltic motor works by rolling over flexible tubing similar to squeezing toothpaste out of a tube.\n\nAs the tube is squeezed through the pump a specific volume of liquid is displaced, as such a specific volume can be displaced with a specific number of rotations, due to this peristaltic pumps won’t be able to accurately fill below the minimum fill volume. For best accuracy, a peristaltic fill should be designed to not partially fill, aka if one dose of a peristaltic is 0.1ml (usually 3rd of a revolution), to fill a 3.00mL syringe requires 30 doses (10 revolutions), If instead we require 3.05mL fill this would require 30.5 doses, this half dose will not be as repeatable as the other 30 revolutions.\nAlthough this process is relatively low foaming, this can become a problem for products prone to frothing and tubing/motors must be selected appropriately. Peristaltic filling flowrate and accuracy is defined purely by the tubing and motor selections, and as such there is a tradeoff between accuracy and fill speed. A system designed to fill 2mL vials may therefore be very slow to fill 60mL vials assuming the pump/tube combination is suitable for the differing product properties such as viscosity. With more complex peristaltic systems these issues can be overcome with variable tube sizing, rotation velocity and tube compression."},"Recordings/Recordings":{"title":"Recordings","links":[],"tags":[],"content":"I’ve found myself spending more and more time explaining and teaching topics to people in my industry especially engineers interested in the future of digitalisation or pharmaceutical equipment.\nFor anyone that knows me and my style of explanations, I love diagramming and visualising topics, I believe in doing it this way you start to understand the whole picture much more easily and can start to spot issues and ask smart questions.\nMy intent with this page is to put the effort into one recording explaining these important topics so that it can be used at any time by anyone."},"index":{"title":"Welcome to My Website","links":["Notes/Notes","Recordings/Recordings","Posts/"],"tags":[],"content":"TLDR:\nWelcome to my New Website! This iteration is designed content first to allow you easy access to all the information you need, no more, no less focusing on Digitalisation/Automation and Pharmaceuticals manufacturing.\nMy current site architecture is to focus on three distinct areas:\n\nSecond Brain Notes - An atomic note network\nRecordings - (Hopefully) A set of videos explaining commonly asked topics in depth\nPosts - A space for more in depth writing about individual projects, events, thoughts etc…\n\n\nWelcome to my website!\nFor those that know me and have used my site previously know i’ve made many generations of my website. Usually I re-do my website every other year or so due to some new technology or flash design but this time I wanted to make a platform where I focus on the content and making something useful, so apologies to anyone expecting something new and flashy.\nOver the last few years and revisions, it’s always been sentimental to me, if not useful, to retain my old site for all, usually me, to go back and see. If you’re looking for my old website or are just interested in the history of the site you can find it Here and even dig all the way back to my first website.\nIn my newest site I’m trying out a new approach to really focus on the content provided and the platform to allow questions, discussions and a lot of learning.\nWe’ve all been in the position where we want to delve into a specific topic and either you need to read a 1000 page textbook to get what you need or inversely the content is too dense and expects you to have a full understanding of the field. My intent with this approach is to hopefully make a website that allows you to find exactly what you need and only read what you need to but also make as much information available as possible, to do that I am creating a second brain/ Zettelkasten style website based on the research of  Niklas Luhmannwhere I can share my knowledge to anyone willing to listen. If you want to take a look at this try using the search bar to read about a topic or find the landing page here: Second Brain Notes\nBeyond the second brain/atomic notes approach, it is sometimes beneficial to do deep dives into thoughts, architectures, processes, projects amongst other things that aren’t quite the micro absolutes that suit that approach. For these more in-depth/structured writings I have created a Posts area that will be constantly updated. Don’t worry though, these posts will link into the Notes to still offer the same clarity and optional depth.\nA final section that I am planning to start is the Recordings section, I among other people are very visual with their understanding of topics and can understand things much quicker when they’re not words on a page. As such I commonly discuss topics with people I work with and always see the same questions coming up, in the recordings section I will (hopefully) be curating some quick videos to explain core concepts, technologies and processes.\nOnce again I want to thank you for coming and taking a look around, please get involved, ask questions, point out mistakes, ask for coverage of a topic and I’ll help where I can. If you don’t want to ask it publicly on the comments feel free to reach out on LinkedIn"}}